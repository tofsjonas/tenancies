{"version":3,"sources":["lib/firebase/firebase_storage.ts","components/login/FirebaseLogin.tsx","components/login/Login.tsx","components/portfolio/Search.tsx","components/portfolio/Portfolio.tsx","components/MyRoutes.tsx","lib/auth.ts","i18n/config.ts","components/LanguageToggler.tsx","components/MyNavbar.tsx","App.tsx","reportWebVitals.ts","index.tsx","lib/firebase/firebase.config.ts","contexts/AuthContext.tsx","contexts/TenancyContext.tsx","components/MySpinner.tsx"],"names":["updateTenancyInStorage","a","id","data","new_obj","updated","firestore","FieldValue","serverTimestamp","db","collection","doc","update","deleteTenancyFromStorage","user","console","log","delete","getTenanciesFromStorage","result","docRef","where","is_anonymous","uid","get","docs","forEach","item","tenancy","db_id","push","addTenancyToStorage","obj","temp","owner","created","location","GeoPoint","x","y","add","res","uiConfig","signInFlow","signInOptions","firebaseuiAuth","AnonymousAuthProvider","PROVIDER_ID","firebaseApp","auth","EmailAuthProvider","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","FirebaseLogin","className","firebaseAuth","Login","Pelle","styled","div","Search","tenancies","t","useTranslation","navigate","useNavigate","useState","selected","labelKey","minLength","onChange","pick","options","placeholder","renderMenuItemChildren","option","tekst","Tenancy","lazy","Tenancies","Portfolio","useContext","AuthContext","TenancyContext","dispatch","loading","setLoading","warning","useAlert","is_mounted","useRef","useEffect","current","then","type","SET_TENANCIES","payload","catch","err","message","Navbar","bg","expand","Container","Brand","Toggle","style","color","borderColor","Collapse","MySpinner","title","length","Row","Col","fallback","path","element","MyRoutes","is_loading","Spinner","animation","signOut","supported_i18n_languages","initial_language","localStorage","getItem","indexOf","i18n","use","initReactI18next","init","fallbackLng","lng","resources","en","translations","require","sv","ns","defaultNS","languages","LanguageToggler","changeLanguage","e","value","target","setItem","map","lang","Button","variant","language","onClick","MyNavbar","success","NavDropdown","name","Item","href","preventDefault","alert","App","timeouts","danger","fluid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","useDeviceLanguage","analytics","SET_USER","LOGOUT_USER","initialState","undefined","reducer","state","action","createContext","AuthProvider","children","useReducer","unregisterAuthObserver","React","onAuthStateChanged","firebase_user","isAnonymous","displayName","Provider","ADD_TENANCY","UPDATE_TENANCY","DELETE_TENANCY","filter","TenancyProvider","role"],"mappings":"4RASaA,EAAsB,uCAAG,iCAAAC,EAAA,6DAASC,EAAT,EAASA,GAAIC,EAAb,EAAaA,KAC3CC,EAD8B,2BAE/BD,GAF+B,IAGlCE,QAASC,IAAUC,WAAWC,oBAHI,SAK9BC,IAAGC,WAAW,aAAaC,IAAIT,GAAIU,OAAOR,GALZ,gCAM7BA,GAN6B,2CAAH,sDAStBS,EAAwB,uCAAG,WAAOX,EAAYY,GAAnB,SAAAb,EAAA,6DACtCc,QAAQC,IAAIF,GAD0B,SAEhCL,IAAGC,WAAW,aAAaC,IAAIT,GAAIe,SAFH,2CAAH,wDAKxBC,EAAuB,uCAAG,WAAOJ,GAAP,iBAAAb,EAAA,6DAC/BkB,EAAoB,GACpBC,EAASX,IAAGC,WAAW,aAAaW,MAAM,QAAS,KAAMP,EAAKQ,aAAe,KAAOR,EAAKS,KAF1D,SAGlBH,EAAOI,MAHW,qBAIhCC,KAAKC,SAAQ,SAACC,GACjB,IAAMC,EAAO,2BACRD,EAAKxB,QADG,IAEX0B,MAAOF,EAAKzB,KAGdiB,EAAOW,KAAKF,MAVuB,kBAY9BT,GAZ8B,2CAAH,sDAevBY,EAAmB,uCAAG,WAAOC,EAAclB,GAArB,iBAAAb,EAAA,6DAC3BgC,EAD2B,2BAE5BD,GAF4B,IAG/BE,MAAOpB,EAAKQ,aAAe,KAAOR,EAAKS,IACvCY,QAAS7B,IAAUC,WAAWC,kBAC9BH,QAASC,IAAUC,WAAWC,kBAC9B4B,SAAU,IAAI9B,IAAU+B,SAASL,EAAIM,EAAGN,EAAIO,KANb,SASf9B,IAAGC,WAAW,aAAa8B,IAAIP,GAThB,cAS3BQ,EAT2B,OAUjCR,EAAKJ,MAAQY,EAAIvC,GAVgB,kBAW1B+B,GAX0B,2CAAH,yD,muGC7B1BS,EAAW,CACfC,WAAY,QACZC,cAAe,CAEbC,OAAeC,sBAAsBC,YACrCC,IAAYC,KAAKC,kBAAkBH,YAEnCC,IAAYC,KAAKE,mBAAmBJ,aAMtCK,UAAW,CACTC,4BAA6B,kBAAM,KAgBxBC,EAZO,WACpB,OACE,qBAAKC,UAAU,eAAf,SACE,cAAC,IAAD,CACEA,UAAU,gBACVb,SAAUA,EACVc,aAAcR,IAAYC,YCenBQ,EAtCD,WA+BZ,OACE,sBAAKF,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,mBACA,cAAC,EAAD,Q,6EC/BAG,G,cAAQC,EAAOC,IAAV,oFAsCIC,EA5BA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,UACRC,EAAMC,cAAND,EACFE,EAAWC,cAGjB,EAAgCC,mBAAoB,IAApD,mBAAOC,EAAP,UAQA,OACE,cAACV,EAAD,UACE,cAAC,IAAD,CACExD,GAAG,uBACHmE,SAAS,QACTC,UAAW,EACXF,SAAUA,EACVG,SAboB,SAACC,GACrBA,EAAK,IACPP,EAAS,YAAD,OAAaO,EAAK,GAAGtE,MAY3BuE,QAASX,EACTY,YAAaX,EAAE,sCACfY,uBAAwB,SAACC,GAAD,OAAqB,+BAAOA,EAAOC,c,QC5B7DC,EAAUC,gBAAK,kBAAM,uDACrBC,EAAYD,gBAAK,kBAAM,iCAsEdE,EApEG,WAChB,IAAQnE,EAASoE,qBAAWC,KAApBrE,KAEAiD,EAAMC,cAAND,EACR,EAAgCmB,qBAAWE,KAAnCtB,EAAR,EAAQA,UAAWuB,EAAnB,EAAmBA,SACnB,EAA8BlB,oBAAS,GAAvC,mBAAOmB,EAAP,KAAgBC,EAAhB,KAEQC,EAAYC,cAAZD,QAEFE,EAAaC,kBAAO,GAyB1B,OAvBAC,qBAAU,WAkBR,OAjBAF,EAAWG,SAAU,EACrB3E,YAAwBJ,GACrBgF,MAAK,SAAC3F,GACDuF,EAAWG,UACbR,EAAS,CACPU,KAAMC,IACNC,QAAS9F,IAEXoF,GAAW,OAGdW,OAAM,SAACC,GACNZ,GAAW,GACXC,EAAQW,EAAIC,SACZrF,QAAQC,IAAImF,MAGT,WACLT,EAAWG,SAAU,KAEtB,CAACR,EAAUG,EAAS1E,IAGrB,qCACE,cAACuF,EAAA,EAAD,CAAQC,GAAG,UAAUC,OAAO,KAA5B,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAclD,UAAU,UAAxB,SAAmCQ,EAAE,2BACrC,cAACsC,EAAA,EAAOK,OAAR,CAAe,gBAAc,iBAAiBC,MAAO,CAAEC,MAAO,SAAUC,YAAa,UAArF,SACE,cAAC,IAAD,MAGF,cAACR,EAAA,EAAOS,SAAR,CAAiB5G,GAAG,iBAAiBqD,UAAU,sBAA/C,SACE,cAAC,EAAD,CAAQO,UAAWA,WAKxBwB,GAAW,cAACyB,EAAA,EAAD,CAAWC,MAAM,8BAC3B1B,GAAWxB,GAAkC,IAArBA,EAAUmD,QAClC,cAACT,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAMpD,EAAE,yCAIZuB,GAAWxB,GAAaA,EAAUmD,OAAS,GAC3C,cAAC,WAAD,CAAUG,SAAU,cAACL,EAAA,EAAD,CAAWC,MAAM,uBAArC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,cAAcC,QAAS,cAACxC,EAAD,MACnC,cAAC,IAAD,CAAOuC,KAAK,IAAIC,QAAS,cAACtC,EAAD,eC7CtBuC,EA9BE,WACf,MAA6BrC,qBAAWC,KAAhCrE,EAAR,EAAQA,KAAM0G,EAAd,EAAcA,WAEd,OACE,qCAEGA,GACC,qCACE,cAACC,EAAA,EAAD,CAASC,UAAU,WADrB,4BAIAF,GACA,eAAC,IAAD,WACG1G,GAAQA,EAAKS,KACZ,qCAEE,cAAC,IAAD,CAAO8F,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,WAG1BxG,IAASA,EAAKS,MACf,mCACE,cAAC,IAAD,CAAO8F,KAAK,IAAIC,QAAS,cAAC,EAAD,e,kCC3B1BK,EAAO,uCAAG,sBAAA1H,EAAA,sDACrB+C,IAAYC,OAAO0E,UADE,2CAAH,qD,wBCCPC,EAA2B,CAAC,KAAM,MAE3CC,EAAmBC,aAAaC,QAAQ,aAAe,MAEC,IAAxDH,EAAyBI,QAAQH,KACnCA,EAAmB,MAGrBI,IAAKC,IAAIC,KAAkBC,KAAK,CAC9BC,YAAa,KACbC,IAAKT,EACLU,UAAW,CACTC,GAAI,CACFC,aAAcC,EAAQ,MAExBC,GAAI,CACFF,aAAcC,EAAQ,OAG1BE,GAAI,CAAC,gBACLC,UAAW,iBAGbZ,IAAKa,UAAY,CAAC,KAAM,MAETb,EAAf,EAAeA,ICHAc,EApBS,WACtB,IAAQd,EAASjE,cAATiE,KAEFe,EAAiB,SAACC,GACtB,IAAMC,EAASD,EAAEE,OAA4BD,MAC7CpB,aAAasB,QAAQ,WAAYF,GAEjCjB,EAAKe,eAAeE,IAGtB,OACE,qBAAK3F,UAAU,kBAAf,SACGqE,EAAyByB,KAAI,SAACC,GAAD,OAC5B,cAACC,EAAA,EAAD,CAAQC,QAASF,IAASrB,EAAKwB,SAAW,OAAS,QAAoBC,QAASV,EAAgBE,MAAOI,EAAvG,SACGA,GAD8DA,SCmC1DK,EA3CE,WACf,IAAQ5F,EAAMC,cAAND,EACAjD,EAASoE,qBAAWC,KAApBrE,KACA8I,EAAYnE,cAAZmE,QAWR,OACE,eAACvD,EAAA,EAAD,CAAQE,OAAO,KAAKhD,UAAU,YAA9B,UACE,cAAC8C,EAAA,EAAOI,MAAR,CAAclD,UAAU,UAAxB,SAAmCQ,EAAE,mBACrC,cAACsC,EAAA,EAAOK,OAAR,CAAe,gBAAc,qBAC7B,eAACL,EAAA,EAAOS,SAAR,CAAiB5G,GAAG,mBAAmBqD,UAAU,sBAAjD,UACGzC,GAAQA,EAAKS,KACZ,mCAEE,cAACsI,EAAA,EAAD,CAAa7C,MAAOlG,EAAKgJ,KAAM5J,GAAG,2BAAlC,SASE,cAAC2J,EAAA,EAAYE,KAAb,CAAkBC,KAAK,IAAIN,QA1BlB,SAACT,GACpBA,EAAEgB,iBACFtC,IACG7B,MAAK,WACJ8D,EAAQ,4CAET1D,MAAMgE,QAoBC,SACGnG,EAAE,uBAMX,cAAC,EAAD,WCLOoG,MA/Bf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,SAAU,CAAE5E,QAAS,IAAM6E,OAAQ,IAAOT,QAAS,KADrD,SAIE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAACpD,EAAA,EAAD,CAAW8D,OAAK,EAAC/G,UAAU,WAA3B,SACE,cAAC2D,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,UAIN,cAACX,EAAA,EAAD,UACE,cAACU,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAa5D,UAAU,iBACvB,cAAC,EAAD,qBClBHgH,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB3E,MAAK,YAAkD,IAA/C4E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,gCClBA,sGAgBAa,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,4BACZC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOV,IAAMtL,EAAY8K,IAAS9K,UACd8K,IAASnI,OACxB4I,oBACL,IAAMpL,EAAKH,IACX8K,IAASU,YAEMrL,O,4HCtBFsL,EAAW,WACXC,EAAc,cAmBrBC,EAAsB,CAC1BnL,KAAM,CACJS,SAAK2K,EACLpC,KAAM,QACNxI,cAAc,GAEhBkG,YAAY,GAGR2E,EAAU,SAACC,EAAcC,GAC7B,OAAQA,EAAOtG,MACb,KAAKgG,EACH,OAAO,2BAAKK,GAAZ,IAAmBtL,KAAMuL,EAAOpG,QAASuB,YAAY,IACvD,IA/B0B,iBAgCxB,OAAO,2BAAK4E,GAAZ,IAAmB5E,WAAY6E,EAAOpG,UACxC,KAAK+F,EACH,OAAO,2BAAKC,GAAZ,IAA0BzE,YAAY,IACxC,QACE,OAAO4E,IAQAjH,EAAcmH,wBAAa,2BACnCL,GADmC,IAEtC5G,SAAU,kBAAM,SA4CHkH,IAvCgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChC,EAA0BC,qBAAWN,EAASF,GAA9C,mBAAOG,EAAP,KAAc/G,EAAd,KACMqH,EAAyBC,IAAMhH,QAAa,eA8BlD,OA5BAC,qBAAU,WAuBR,OAtBA8G,EAAuB7G,QAAU7C,IAAYC,OAAO2J,oBAAmB,SAACC,GACtE,GAAIA,EAAe,CACjB,IAAM/L,EAAO,CACXS,IAAKsL,EAActL,IACnBD,aAAcuL,EAAcC,YAC5BhD,KAAM+C,EAAcE,aAAe,SAErC1H,EAAS,CACPU,KAAMgG,EACN9F,QAASnF,SAQXuE,EAAS,CACPU,KAAMiG,OAIL,WACLU,EAAuB7G,aAExB,CAACR,IAGF,cAACF,EAAY6H,SAAb,CAAsB9D,MAAK,2BAAOkD,GAAP,IAAc/G,aAAzC,SACG+G,EAAM5E,WAAa,cAAC,IAAD,CAAWR,MAAM,yBAA4BwF,M,mPCxF1DxG,EAAgB,gBAChBiH,EAAc,cACdC,EAAiB,iBACjBC,EAAiB,iBAYxBlB,EAAsB,CAC1BnI,UAAW,IAGPqI,EAAU,SAACC,EAAcC,GAC7B,OAAQA,EAAOtG,MACb,KAAKC,EACH,OAAO,2BAAKoG,GAAZ,IAAmBtI,UAAWuI,EAAOpG,UACvC,KAAKgH,EACH,OAAO,2BAAKb,GAAZ,IAAmBtI,UAAU,GAAD,mBAAMsI,EAAMtI,WAAZ,CAAuBuI,EAAOpG,YAC5D,KAAKiH,EACH,OAAO,2BACFd,GADL,IAEEtI,UAAWsI,EAAMtI,UAAUuF,KAAI,SAACzH,GAC9B,OAAIA,EAAQ1B,KAAOmM,EAAOpG,QAAQ/F,GACzBmM,EAAOpG,QAEPrE,OAIf,KAAKuL,EACH,OAAO,2BAAKf,GAAZ,IAAmBtI,UAAWsI,EAAMtI,UAAUsJ,QAAO,SAACpL,GAAD,OAASA,EAAI9B,KAAOmM,EAAOpG,aAClF,QACE,OAAOmG,IAQAhH,EAAiBkH,wBAAa,2BACtCL,GADsC,IAEzC5G,SAAU,kBAAM,SAQHgI,IALmB,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SACnC,EAA0BC,qBAAWN,EAASF,GAA9C,mBAAOG,EAAP,KAAc/G,EAAd,KAEA,OAAO,cAACD,EAAe4H,SAAhB,CAAyB9D,MAAK,2BAAOkD,GAAP,IAAc/G,aAA5C,SAAyDmH,M,gCC1DlE,wBAcezF,IAPG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MACnB,OACE,qCACE,cAAC,IAAD,CAASU,UAAU,SAAS4F,KAAK,WADnC,IACgDtG,Q","file":"static/js/main.23fef88d.chunk.js","sourcesContent":["import { Tenancy, TenancyMetaData, DB_ID } from 'types/global'\nimport db, { firestore } from 'lib/firebase/firebase.config'\nimport { User } from 'contexts/AuthContext'\n\ntype updateTenancyInStorageParams = {\n  id: DB_ID\n  data: TenancyMetaData\n}\n\nexport const updateTenancyInStorage = async ({ id, data }: updateTenancyInStorageParams) => {\n  const new_obj = {\n    ...data,\n    updated: firestore.FieldValue.serverTimestamp(),\n  }\n  await db.collection('tenancies').doc(id).update(new_obj)\n  return new_obj\n}\n\nexport const deleteTenancyFromStorage = async (id: string, user: User) => {\n  console.log(user)\n  await db.collection('tenancies').doc(id).delete()\n}\n\nexport const getTenanciesFromStorage = async (user: User) => {\n  const result: Tenancy[] = []\n  const docRef = db.collection('tenancies').where('owner', '==', user.is_anonymous ? null : user.uid)\n  const data = await docRef.get()\n  data.docs.forEach((item) => {\n    const tenancy = {\n      ...item.data(),\n      db_id: item.id,\n    } as Tenancy\n\n    result.push(tenancy)\n  })\n  return result\n}\n\nexport const addTenancyToStorage = async (obj: Tenancy, user: User) => {\n  const temp = {\n    ...obj,\n    owner: user.is_anonymous ? null : user.uid,\n    created: firestore.FieldValue.serverTimestamp(),\n    updated: firestore.FieldValue.serverTimestamp(),\n    location: new firestore.GeoPoint(obj.x, obj.y),\n  }\n\n  const res = await db.collection('tenancies').add(temp)\n  temp.db_id = res.id\n  return temp\n}\n","import React from 'react'\nimport { firebaseApp } from 'lib/firebase/firebase.config'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport { auth as firebaseuiAuth } from 'firebaseui'\n\n// Styles\nimport './login.css' // This uses CSS modules.\nimport './firebaseui-styling.global.css' // Import globally.\n\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    // Leave the lines as is for the providers you want to offer your users.\n    firebaseuiAuth.AnonymousAuthProvider.PROVIDER_ID,\n    firebaseApp.auth.EmailAuthProvider.PROVIDER_ID,\n    // firebaseApp.auth.PhoneAuthProvider.PROVIDER_ID,\n    firebaseApp.auth.GoogleAuthProvider.PROVIDER_ID,\n    // firebaseApp.auth.FacebookAuthProvider.PROVIDER_ID,\n    // firebaseApp.auth.TwitterAuthProvider.PROVIDER_ID,\n    // firebaseApp.auth.GithubAuthProvider.PROVIDER_ID,\n    // firebaseApp.auth.AnonymousAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false,\n  },\n}\n\nconst FirebaseLogin = () => {\n  return (\n    <div className=\"fb-container\">\n      <StyledFirebaseAuth\n        className=\"fb-firebaseUi\"\n        uiConfig={uiConfig}\n        firebaseAuth={firebaseApp.auth()}\n        //\n      />\n    </div>\n  )\n}\nexport default FirebaseLogin\n","import React from 'react' // useContext\n// import Button from 'react-bootstrap/Button'\n// import { signInAnonymously, signOut } from 'lib/auth'\n// import { useAlert } from 'react-bootstrap-hooks-alert'\n// import { useLocation, useNavigate } from 'react-router-dom'\n\n// import { AuthContext, SET_IS_LOADING } from 'contexts/AuthContext'\n// import LoginWithEmail from './LoginWithEmail'\nimport FirebaseLogin from './FirebaseLogin'\n\nconst Login = () => {\n  // const { user, dispatch } = useContext(AuthContext)\n  // const { success } = useAlert()\n  // const location = useLocation()\n  // const navigate = useNavigate()\n  // return location.pathname;\n\n  // console.log(location.pathname)\n\n  // const handleSignInAnonymously = () => {\n  //   dispatch({\n  //     type: SET_IS_LOADING,\n  //     payload: true,\n  //   })\n\n  //   signInAnonymously()\n  //     .then(() => {\n  //       if (location.pathname === '/login') {\n  //         navigate('/')\n  //       }\n  //     })\n  //     .catch(alert)\n  // }\n  // const handleLogout = () => {\n  //   signOut()\n  //     .then(() => {\n  //       success('you have been logged out')\n  //     })\n  //     .catch(alert)\n  // }\n\n  return (\n    <div className=\"login\">\n      <h1 className=\"text-center\">Login</h1>\n      <FirebaseLogin />\n    </div>\n  )\n}\nexport default Login\n","import React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Typeahead } from 'react-bootstrap-typeahead'\nimport { Tenancy } from '../../types/global'\nimport { useNavigate } from 'react-router-dom'\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\nimport styled from '@emotion/styled'\n\n/**\n * @todo react-highlight-words ?\n * in the typeahead examples this happens automatically...\n */\n\nconst Pelle = styled.div`\n  #async-tenancy-search {\n    min-width: 20rem;\n  }\n`\n\ntype SearchProps = {\n  tenancies: Tenancy[]\n}\n\nconst Search = ({ tenancies }: SearchProps) => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n\n  // eslint-disable-next-line\n  const [selected, setSelected] = useState<Tenancy[]>([]) // setSelected never used..\n\n  const handleTenancyPick = (pick: Tenancy[]) => {\n    if (pick[0]) {\n      navigate(`/tenancy/${pick[0].id}`)\n    }\n  }\n\n  return (\n    <Pelle>\n      <Typeahead\n        id=\"async-tenancy-search\"\n        labelKey=\"tekst\"\n        minLength={1}\n        selected={selected}\n        onChange={handleTenancyPick}\n        options={tenancies}\n        placeholder={t('overview_navbar_placeholder_search')}\n        renderMenuItemChildren={(option: Tenancy) => <span>{option.tekst}</span>}\n      />\n    </Pelle>\n  )\n}\nexport default Search\n","import React, { useState, useEffect, lazy, Suspense, useRef, useContext } from 'react'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport { Search as SearchIcon } from 'react-bootstrap-icons'\nimport { useAlert } from 'react-bootstrap-hooks-alert'\n\nimport { useTranslation } from 'react-i18next'\nimport { getTenanciesFromStorage } from '../../lib/storage'\nimport { TenancyContext, SET_TENANCIES } from '../../contexts/TenancyContext'\nimport { Routes, Route } from 'react-router-dom'\nimport Search from './Search'\nimport MySpinner from '../MySpinner'\nimport { AuthContext } from 'contexts/AuthContext'\n\nconst Tenancy = lazy(() => import('./Tenancy'))\nconst Tenancies = lazy(() => import('./Tenancies'))\n\nconst Portfolio = () => {\n  const { user } = useContext(AuthContext)\n\n  const { t } = useTranslation()\n  const { tenancies, dispatch } = useContext(TenancyContext)\n  const [loading, setLoading] = useState(true)\n\n  const { warning } = useAlert()\n\n  const is_mounted = useRef(false)\n\n  useEffect(() => {\n    is_mounted.current = true\n    getTenanciesFromStorage(user)\n      .then((data) => {\n        if (is_mounted.current) {\n          dispatch({\n            type: SET_TENANCIES,\n            payload: data,\n          })\n          setLoading(false)\n        }\n      })\n      .catch((err) => {\n        setLoading(false)\n        warning(err.message)\n        console.log(err)\n      })\n\n    return () => {\n      is_mounted.current = false\n    }\n  }, [dispatch, warning, user])\n\n  return (\n    <>\n      <Navbar bg=\"primary\" expand=\"sm\">\n        <Container>\n          <Navbar.Brand className=\"me-auto\">{t('overview_navbar_brand')}</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"tenancy-navbar\" style={{ color: 'silver', borderColor: 'silver' }}>\n            <SearchIcon />\n          </Navbar.Toggle>\n\n          <Navbar.Collapse id=\"tenancy-navbar\" className=\"justify-content-end\">\n            <Search tenancies={tenancies} />\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      {loading && <MySpinner title=\"...fetching tenancies...\" />}\n      {!loading && tenancies && tenancies.length === 0 && (\n        <Container>\n          <Row>\n            <Col>{t('overview_you_have_no_tenancies')}</Col>\n          </Row>\n        </Container>\n      )}\n      {!loading && tenancies && tenancies.length > 0 && (\n        <Suspense fallback={<MySpinner title=\"...loading page...\" />}>\n          <Routes>\n            <Route path=\"tenancy/:id\" element={<Tenancy />} />\n            <Route path=\"*\" element={<Tenancies />} />\n          </Routes>\n        </Suspense>\n      )}\n    </>\n  )\n}\nexport default Portfolio\n","import React, { useContext } from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport Login from './login/Login'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { AuthContext } from '../contexts/AuthContext'\nimport Portfolio from './portfolio/Portfolio'\n\nconst MyRoutes = () => {\n  const { user, is_loading } = useContext(AuthContext)\n\n  return (\n    <>\n      {/* {user && user.uid} */}\n      {is_loading && (\n        <>\n          <Spinner animation=\"border\" /> ...authenticating...\n        </>\n      )}\n      {!is_loading && (\n        <Routes>\n          {user && user.uid && (\n            <>\n              {/* {(!user.uid || user.is_anonymous) && <Route path=\"login\" element={<Login />} />} */}\n              <Route path=\"login\" element={<Login />} />\n              <Route path=\"*\" element={<Portfolio />} />\n            </>\n          )}\n          {(!user || !user.uid) && (\n            <>\n              <Route path=\"*\" element={<Login />} />\n            </>\n          )}\n        </Routes>\n      )}\n    </>\n  )\n}\nexport default MyRoutes\n","import { firebaseApp } from './firebase/firebase.config'\n\nexport const signOut = async () => {\n  firebaseApp.auth().signOut()\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nexport const supported_i18n_languages = ['en', 'sv']\n\nlet initial_language = localStorage.getItem('language') || 'en'\n\nif (supported_i18n_languages.indexOf(initial_language) === -1) {\n  initial_language = 'en'\n}\n\ni18n.use(initReactI18next).init({\n  fallbackLng: 'en',\n  lng: initial_language,\n  resources: {\n    en: {\n      translations: require('./locales/en/translations.json'),\n    },\n    sv: {\n      translations: require('./locales/sv/translations.json'),\n    },\n  },\n  ns: ['translations'],\n  defaultNS: 'translations',\n})\n\ni18n.languages = ['en', 'sv']\n\nexport default i18n\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport Button from 'react-bootstrap/Button'\nimport { supported_i18n_languages } from '../i18n/config'\n\nconst LanguageToggler = () => {\n  const { i18n } = useTranslation()\n\n  const changeLanguage = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const value = (e.target as HTMLInputElement).value\n    localStorage.setItem('language', value)\n    // console.log(i18n.languages) changes between clicks, no idea why...\n    i18n.changeLanguage(value)\n  }\n\n  return (\n    <div className=\"LanguageToggler\">\n      {supported_i18n_languages.map((lang) => (\n        <Button variant={lang === i18n.language ? 'dark' : 'light'} key={lang} onClick={changeLanguage} value={lang}>\n          {lang}\n        </Button>\n      ))}\n    </div>\n  )\n}\nexport default LanguageToggler\n","import React, { useContext } from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport { useAlert } from 'react-bootstrap-hooks-alert'\nimport { signOut } from 'lib/auth'\n\nimport LanguageToggler from './LanguageToggler'\nimport { AuthContext } from '../contexts/AuthContext'\nimport { useTranslation } from 'react-i18next'\n\nconst MyNavbar = () => {\n  const { t } = useTranslation()\n  const { user } = useContext(AuthContext)\n  const { success } = useAlert()\n\n  const handleLogout = (e: React.MouseEvent) => {\n    e.preventDefault()\n    signOut()\n      .then(() => {\n        success('You have been successfully logged out')\n      })\n      .catch(alert)\n  }\n\n  return (\n    <Navbar expand=\"sm\" className=\"container\">\n      <Navbar.Brand className=\"mr-auto\">{t('navbar-header')}</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n        {user && user.uid && (\n          <>\n            {/* <Navbar.Text className=\"mr-2\">User:</Navbar.Text> */}\n            <NavDropdown title={user.name} id=\"collapsible-nav-dropdown\">\n              {/* <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <hr /> */}\n              {/* {user.is_anonymous && (\n                <NavDropdown.Item as={Link} to=\"login\">\n                  Login\n                </NavDropdown.Item>\n              )} */}\n              <NavDropdown.Item href=\"#\" onClick={handleLogout}>\n                {t('navbar-logout')}\n              </NavDropdown.Item>\n            </NavDropdown>\n          </>\n        )}\n\n        <LanguageToggler />\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\nexport default MyNavbar\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport TenancyProvider from './contexts/TenancyContext'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { AlertProvider, AlertOutlet } from 'react-bootstrap-hooks-alert'\nimport 'react-bootstrap-hooks-alert/dist/Alert.css'\nimport MyRoutes from './components/MyRoutes'\nimport AuthProvider from './contexts/AuthContext'\nimport MyNavbar from './components/MyNavbar'\n\nfunction App() {\n  return (\n    <Router>\n      <AlertProvider\n        timeouts={{ warning: 5000, danger: 10000, success: 2000 }}\n        // timeouts={{ success: 1000 }}\n      >\n        <AuthProvider>\n          <TenancyProvider>\n            <Container fluid className=\"bg-light\">\n              <Row>\n                <Col>\n                  <MyNavbar />\n                </Col>\n              </Row>\n            </Container>\n            <Container>\n              <Row>\n                <Col>\n                  <AlertOutlet className=\"alert-outlet\" />\n                  <MyRoutes />\n                </Col>\n              </Row>\n            </Container>\n          </TenancyProvider>\n        </AuthProvider>\n      </AlertProvider>\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './i18n/config'\n\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// import firebase from 'firebase'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/analytics'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDS1Th9ZSpB5S1eiPe4FT046Wc1PljDhYo',\n  authDomain: 'tenancies.firebaseapp.com',\n  projectId: 'tenancies',\n  storageBucket: 'tenancies.appspot.com',\n  messagingSenderId: '447792445823',\n  appId: '1:447792445823:web:2fa88d20bee035c3cc024a',\n  measurementId: 'G-L2EL2TGPQD',\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nexport { firebase as firebaseApp }\n\nexport const firestore = firebase.firestore\nexport const auth = firebase.auth()\nauth.useDeviceLanguage()\nconst db = firestore()\nfirebase.analytics()\n\nexport default db\n","import MySpinner from 'components/MySpinner'\nimport React, { createContext, useReducer, useEffect } from 'react'\nimport { firebaseApp } from '../lib/firebase/firebase.config'\n\nexport const SET_USER = 'SET_USER'\nexport const LOGOUT_USER = 'LOGOUT_USER'\nexport const SET_IS_LOADING = 'SET_IS_LOADING'\n\nexport type User = {\n  uid?: string\n  name?: string\n  is_anonymous?: boolean\n}\n\ntype State = {\n  user: User\n  is_loading?: boolean\n}\n\ntype Action =\n  | { type: 'SET_USER'; payload: User }\n  | { type: 'SET_IS_LOADING'; payload: boolean }\n  | { type: 'LOGOUT_USER' }\n\nconst initialState: State = {\n  user: {\n    uid: undefined,\n    name: 'Guest',\n    is_anonymous: false,\n  },\n  is_loading: true,\n}\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case SET_USER:\n      return { ...state, user: action.payload, is_loading: false }\n    case SET_IS_LOADING:\n      return { ...state, is_loading: action.payload }\n    case LOGOUT_USER:\n      return { ...initialState, is_loading: false }\n    default:\n      return state\n  }\n}\n\nexport type ContextType = State & {\n  dispatch: React.Dispatch<Action>\n}\n\nexport const AuthContext = createContext<ContextType>({\n  ...initialState,\n  dispatch: () => null,\n})\n\ntype func = () => void\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const unregisterAuthObserver = React.useRef<func>(() => {})\n\n  useEffect(() => {\n    unregisterAuthObserver.current = firebaseApp.auth().onAuthStateChanged((firebase_user) => {\n      if (firebase_user) {\n        const user = {\n          uid: firebase_user.uid,\n          is_anonymous: firebase_user.isAnonymous,\n          name: firebase_user.displayName || 'Guest',\n        }\n        dispatch({\n          type: SET_USER,\n          payload: user,\n        })\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        // const uid = firebase_user.uid\n        // console.log('uid:', uid, 'isAnonymous:', firebase_user.isAnonymous)\n        // ...\n      } else {\n        dispatch({\n          type: LOGOUT_USER,\n        })\n      }\n    })\n    return () => {\n      unregisterAuthObserver.current()\n    }\n  }, [dispatch])\n\n  return (\n    <AuthContext.Provider value={{ ...state, dispatch }}>\n      {state.is_loading ? <MySpinner title=\"...authenticating...\" /> : children}\n      {/* {!state.is_loading && children} */}\n    </AuthContext.Provider>\n  )\n}\nexport default AuthProvider\n","import React, { createContext, useReducer } from 'react'\nimport { Tenancy } from '../types/global'\n\nexport const SET_TENANCIES = 'SET_TENANCIES'\nexport const ADD_TENANCY = 'ADD_TENANCY'\nexport const UPDATE_TENANCY = 'UPDATE_TENANCY'\nexport const DELETE_TENANCY = 'DELETE_TENANCY'\n\ntype State = {\n  tenancies: Tenancy[]\n}\n\ntype Action =\n  | { type: 'SET_TENANCIES'; payload: Tenancy[] }\n  | { type: 'ADD_TENANCY'; payload: Tenancy }\n  | { type: 'UPDATE_TENANCY'; payload: Tenancy }\n  | { type: 'DELETE_TENANCY'; payload: string }\n\nconst initialState: State = {\n  tenancies: [],\n}\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case SET_TENANCIES:\n      return { ...state, tenancies: action.payload }\n    case ADD_TENANCY:\n      return { ...state, tenancies: [...state.tenancies, action.payload] }\n    case UPDATE_TENANCY:\n      return {\n        ...state,\n        tenancies: state.tenancies.map((tenancy) => {\n          if (tenancy.id === action.payload.id) {\n            return action.payload\n          } else {\n            return tenancy\n          }\n        }),\n      }\n    case DELETE_TENANCY:\n      return { ...state, tenancies: state.tenancies.filter((obj) => obj.id !== action.payload) }\n    default:\n      return state\n  }\n}\n\nexport type ContextType = State & {\n  dispatch: React.Dispatch<Action>\n}\n\nexport const TenancyContext = createContext<ContextType>({\n  ...initialState,\n  dispatch: () => null,\n})\n\nconst TenancyProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return <TenancyContext.Provider value={{ ...state, dispatch }}>{children}</TenancyContext.Provider>\n}\nexport default TenancyProvider\n","import React from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\n\ntype MySpinnerProps = {\n  title?: string\n}\n\nconst MySpinner = ({ title }: MySpinnerProps) => {\n  return (\n    <>\n      <Spinner animation=\"border\" role=\"status\" /> {title}\n    </>\n  )\n}\nexport default MySpinner\n"],"sourceRoot":""}