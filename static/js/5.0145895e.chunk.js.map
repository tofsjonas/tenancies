{"version":3,"sources":["components/portfolio/AddTenancy.tsx"],"names":["AddTenancy","hideModal","t","useTranslation","dispatch","useContext","TenancyContext","navigate","useNavigate","is_mounted","useRef","useEffect","current","useState","is_loading","setIsLoading","is_saving","setIsSaving","picked_tenancy","setPickedTenancy","options","setOptions","show","onHide","onSubmit","event","preventDefault","stopPropagation","addTenancyToStorage","then","data","type","ADD_TENANCY","payload","adgangsadresse","id","catch","err","console","log","Header","closeButton","Title","Body","filterBy","isLoading","labelKey","minLength","onSearch","query","getAddressInfoFromDAWA","success","fail","onChange","pick","placeholder","renderMenuItemChildren","option","tekst","Footer","variant","onClick","disabled","animation","role","size","className"],"mappings":"mNAkIeA,UAhHI,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UACZC,EAAMC,cAAND,EACAE,EAAaC,qBAAWC,KAAxBF,SACFG,EAAWC,cAEXC,EAAaC,kBAAO,GAE1BC,qBAAU,WAER,OADAF,EAAWG,SAAU,EACd,WACLH,EAAWG,SAAU,KAEtB,IAZkD,MAclBC,oBAAS,GAdS,mBAc9CC,EAd8C,KAclCC,EAdkC,OAepBF,oBAAS,GAfW,mBAe9CG,EAf8C,KAenCC,EAfmC,OAiBVJ,qBAjBU,mBAiB9CK,EAjB8C,KAiB9BC,EAjB8B,OAkBvBN,mBAAoB,IAlBG,mBAkB9CO,EAlB8C,KAkBrCC,EAlBqC,KAmErD,OACE,cAAC,IAAD,CAAOC,MAAM,EAAMC,OAAQtB,EAA3B,SACE,eAAC,IAAD,CAAMuB,SA9BW,SAACC,GACpBA,EAAMC,iBACND,EAAME,kBACFT,IACFD,GAAY,GACZW,YAAoBV,GACjBW,MAAK,SAACC,GACL1B,EAAS,CACP2B,KAAMC,IACNC,QAASH,IAEPrB,EAAWG,UACbK,GAAY,GACZhB,IACAM,EAAS,WAAD,OAAYuB,EAAKI,eAAeC,SAG3CC,OAAM,SAACC,GACF5B,EAAWG,SACbK,GAAY,GAEdqB,QAAQC,IAAIF,QAShB,UACE,cAAC,IAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcxC,EAAE,+BAElB,eAAC,IAAMyC,KAAP,WACGzC,EAAE,qCACH,cAAC,IAAD,CACE0C,SAXO,kBAAM,GAYbT,GAAG,kBACHU,UAAW/B,EACXgC,SAAS,QACTC,UAAW,EACXC,SA7De,SAACC,GACxBlC,GAAa,GACbmC,YAAuB,CACrBD,QACAE,QAAS,SAACrB,GACRT,EAAWS,GACXf,GAAa,IAEfqC,KAAM,SAACf,GACLtB,GAAa,GACbuB,QAAQC,IAAIF,OAoDRgB,SA/CgB,SAACC,GACzBnC,EAAiBmC,EAAK,KA+CdlC,QAASA,EACTmC,YAAarD,EAAE,iCACfsD,uBAAwB,SAACC,GAAD,OAAqB,+BAAOA,EAAOC,cAG/D,eAAC,IAAMC,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAAS5D,EAArC,SACGC,EAAE,+BAEL,eAAC,IAAD,CACE0D,QAAS1C,EAAiB,UAAY,YACtCa,KAAK,SACL+B,UAAW5C,GAAkBF,EAH/B,UAKGA,GACC,qCACE,cAAC,IAAD,CAAS+C,UAAU,SAASC,KAAK,SAASC,KAAK,KAA/C,SACE,sBAAMC,UAAU,UAAhB,0BACS,IACVhE,EAAE,yCAGLc,GAAad,EAAE","file":"static/js/5.0145895e.chunk.js","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Form from 'react-bootstrap/Form'\nimport { addTenancyToStorage, getAddressInfoFromDAWA } from '../../lib/backend'\nimport { Tenancy } from '../../types/global'\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead'\nimport { ADD_TENANCY, TenancyContext } from '../../contexts/TenancyContext'\n\nimport { useTranslation } from 'react-i18next'\n\ntype AddTenancyProps = {\n  hideModal: () => void\n}\n\nconst AddTenancy = ({ hideModal }: AddTenancyProps) => {\n  const { t } = useTranslation()\n  const { dispatch } = useContext(TenancyContext)\n  const navigate = useNavigate()\n\n  const is_mounted = useRef(false)\n\n  useEffect(() => {\n    is_mounted.current = true\n    return () => {\n      is_mounted.current = false\n    }\n  }, [])\n\n  const [is_loading, setIsLoading] = useState(false)\n  const [is_saving, setIsSaving] = useState(false)\n\n  const [picked_tenancy, setPickedTenancy] = useState<Tenancy>()\n  const [options, setOptions] = useState<Tenancy[]>([])\n\n  const handleDAWASearch = (query: string) => {\n    setIsLoading(true)\n    getAddressInfoFromDAWA({\n      query,\n      success: (data) => {\n        setOptions(data)\n        setIsLoading(false)\n      },\n      fail: (err) => {\n        setIsLoading(false)\n        console.log(err)\n      },\n    })\n  }\n\n  const handleTenancyPick = (pick: Tenancy[]) => {\n    setPickedTenancy(pick[0])\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    event.stopPropagation()\n    if (picked_tenancy) {\n      setIsSaving(true)\n      addTenancyToStorage(picked_tenancy)\n        .then((data) => {\n          dispatch({\n            type: ADD_TENANCY,\n            payload: data,\n          })\n          if (is_mounted.current) {\n            setIsSaving(false)\n            hideModal()\n            navigate(`tenancy/${data.adgangsadresse.id}`)\n          }\n        })\n        .catch((err) => {\n          if (is_mounted.current) {\n            setIsSaving(false)\n          }\n          console.log(err)\n        })\n    }\n  }\n\n  const filterBy = () => true\n\n  return (\n    <Modal show={true} onHide={hideModal}>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title>{t('add_tenancy_modal_title')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {t('add_tenancy_start_typing_to_fetch')}\n          <AsyncTypeahead\n            filterBy={filterBy}\n            id=\"async-tenancies\"\n            isLoading={is_loading}\n            labelKey=\"tekst\"\n            minLength={3}\n            onSearch={handleDAWASearch}\n            onChange={handleTenancyPick}\n            options={options}\n            placeholder={t('add_tenancy_fetch_placeholder')}\n            renderMenuItemChildren={(option: Tenancy) => <span>{option.tekst}</span>}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={hideModal}>\n            {t('add_tenancy_cancel_button')}\n          </Button>\n          <Button\n            variant={picked_tenancy ? 'primary' : 'secondary'}\n            type=\"submit\"\n            disabled={!picked_tenancy || is_saving}\n          >\n            {is_saving && (\n              <>\n                <Spinner animation=\"border\" role=\"status\" size=\"sm\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>{' '}\n                {t('add_tenancy_save_button_is_saving')}\n              </>\n            )}\n            {!is_saving && t('add_tenancy_save_button')}\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  )\n}\nexport default AddTenancy\n"],"sourceRoot":""}