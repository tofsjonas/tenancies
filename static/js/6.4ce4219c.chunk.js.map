{"version":3,"sources":["components/portfolio/EditTenancy.tsx","components/portfolio/TenancyItem.tsx"],"names":["EditTenancy","tenancy","t","useTranslation","is_mounted","useRef","useForm","defaultValues","metadata","handleSubmit","register","formState","useEffect","current","dispatch","useContext","TenancyContext","useState","is_saving","setIsSaving","Form","onSubmit","updated_tenancy","updateTenancyInStorage","then","data","type","UPDATE_TENANCY","payload","catch","err","console","log","Group","controlId","isDirty","Label","Control","step","placeholder","defaultValue","nbr_of_rooms","utilities","as","rows","tenant_information","Button","variant","disabled","Spinner","animation","role","size","className","MyCrumb","styled","Breadcrumb","ItemContainer","Container","TheItem","item","url","adgangsadresse","y","x","process","navigate","useNavigate","Row","Col","tekst","lg","Image","crossOrigin","width","src","rounded","onClick","window","confirm","deleteTenancyFromStorage","id","DELETE_TENANCY","TenancyItem","useParams","tenancies","setItem","error","setError","filter","obj","Item","linkAs","Link","linkProps","to","active"],"mappings":"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","file":"static/js/6.4ce4219c.chunk.js","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from 'react'\n// import Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Form from 'react-bootstrap/Form'\nimport { updateTenancyInStorage } from '../../lib/backend'\nimport { Tenancy } from '../../types/global'\nimport { UPDATE_TENANCY, TenancyContext } from '../../contexts/TenancyContext'\nimport { useForm } from 'react-hook-form'\n\nimport { useTranslation } from 'react-i18next'\n\ntype FormData = {\n  size: number\n  nbr_of_rooms: number\n  utilities: string\n  tenant_information: string\n}\n\ntype EditTenancyProps = {\n  tenancy: Tenancy\n}\n\nconst EditTenancy = ({ tenancy }: EditTenancyProps) => {\n  const { t } = useTranslation()\n  const is_mounted = useRef(false)\n  const { handleSubmit, register, formState } = useForm<FormData>({\n    defaultValues: tenancy.metadata || {},\n  })\n\n  useEffect(() => {\n    is_mounted.current = true\n    return () => {\n      is_mounted.current = false\n    }\n  }, [])\n\n  const { dispatch } = useContext(TenancyContext)\n\n  const [is_saving, setIsSaving] = useState(false)\n\n  const onSubmit = (metadata: FormData) => {\n    setIsSaving(true)\n    const updated_tenancy: Tenancy = { ...tenancy, metadata }\n\n    updateTenancyInStorage(updated_tenancy)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_TENANCY,\n          payload: data,\n        })\n        if (is_mounted.current) {\n          setIsSaving(false)\n        }\n      })\n      .catch((err) => {\n        if (is_mounted.current) {\n          setIsSaving(false)\n        }\n        console.log(err)\n      })\n  }\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Form.Group controlId=\"formBasicSize\">\n        {formState.isDirty && 'APA'}\n        <Form.Label>{t('edit_tenancy_label_size')}</Form.Label>\n        <Form.Control\n          {...register('size')}\n          type=\"number\"\n          step=\"0.1\"\n          placeholder={t('edit_tenancy_label_size_placeholder')}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicNbrOfRooms\">\n        <Form.Label>{t('edit_tenancy_label_nbr_of_rooms')}</Form.Label>\n        <Form.Control\n          {...register('nbr_of_rooms')}\n          defaultValue={tenancy.metadata && tenancy.metadata.nbr_of_rooms}\n          type=\"number\"\n          step=\"1\"\n          placeholder={t('edit_tenancy_label_nbr_of_rooms_placeholder')}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicUtilities\">\n        <Form.Label>{t('edit_tenancy_label_utilities')}</Form.Label>\n        <Form.Control\n          {...register('utilities')}\n          defaultValue={tenancy.metadata && tenancy.metadata.utilities}\n          as=\"textarea\"\n          rows={3}\n          placeholder={t('edit_tenancy_label_utilities_placeholder')}\n        />\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicTenantInformation\">\n        <Form.Label>{t('edit_tenancy_label_tenant_information')}</Form.Label>\n        <Form.Control\n          {...register('tenant_information')}\n          defaultValue={tenancy.metadata && tenancy.metadata.tenant_information}\n          as=\"textarea\"\n          rows={3}\n          placeholder={t('edit_tenancy_label_tenant_information_placeholder')}\n        />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" disabled={!formState.isDirty}>\n        {is_saving && (\n          <>\n            <Spinner animation=\"border\" role=\"status\" size=\"sm\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>{' '}\n            {t('edit_tenancy_save_button_is_saving')}\n          </>\n        )}\n        {!is_saving && t('edit_tenancy_save_button')}\n      </Button>\n    </Form>\n  )\n}\nexport default EditTenancy\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Link, useParams, useNavigate } from 'react-router-dom'\nimport { TenancyContext, DELETE_TENANCY } from '../../contexts/TenancyContext'\nimport { Tenancy } from '../../types/global'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\nimport { XLg } from 'react-bootstrap-icons'\nimport { useTranslation } from 'react-i18next'\n\nimport Image from 'react-bootstrap/Image'\n\nimport EditTenancy from './EditTenancy'\nimport styled from '@emotion/styled'\nimport { deleteTenancyFromStorage } from '../../lib/backend'\n\nconst MyCrumb = styled(Breadcrumb)`\n  ol {\n    background-color: transparent;\n  }\n`\nconst ItemContainer = styled(Container)`\n  img {\n    max-width: 85vw;\n  }\n  margin-bottom: 40px;\n`\ntype TheItemProps = {\n  item: Tenancy\n}\n\nconst TheItem = ({ item }: TheItemProps) => {\n  const url = `https://maps.googleapis.com/maps/api/streetview?size=400x400&location=${item.adgangsadresse.y},${item.adgangsadresse.x}&fov=70&pitch=0&key=${process.env.REACT_APP_GOOGLE_API_KEY}`\n  // const url = `https://via.placeholder.com/500`\n  const { dispatch } = useContext(TenancyContext)\n  const navigate = useNavigate()\n\n  /**\n   * @todo make it purdier than window.confirm\n   */\n  const handleDeleteClick = () => {\n    if (window.confirm('Are you sure?')) {\n      deleteTenancyFromStorage(item.adgangsadresse.id)\n        .then(() => {\n          dispatch({\n            type: DELETE_TENANCY,\n            payload: item.adgangsadresse.id,\n          })\n          navigate('tenancies')\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  return (\n    <ItemContainer>\n      <Row>\n        <Col>\n          <h1>{item.tekst}</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col lg>\n          <Image crossOrigin=\"anonymous\" width=\"500\" src={url} rounded />\n        </Col>\n        <Col lg>\n          <EditTenancy tenancy={item} />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <br />\n          <Button variant=\"danger\" onClick={handleDeleteClick}>\n            <XLg /> Delete Tenancy\n          </Button>\n        </Col>\n      </Row>\n    </ItemContainer>\n  )\n}\n\nconst TenancyItem = () => {\n  const { id } = useParams()\n  const { t } = useTranslation()\n  const { tenancies } = useContext(TenancyContext)\n\n  const [item, setItem] = useState<Tenancy | null>(null)\n  const [error, setError] = useState('')\n\n  useEffect(() => {\n    const item = tenancies.filter((obj) => obj.adgangsadresse.id === id)[0]\n    if (item) {\n      setError('')\n      setItem(item)\n    } else {\n      setItem(null)\n      setError('Item not found :(')\n    }\n  }, [tenancies, id])\n\n  return (\n    <>\n      <MyCrumb>\n        <Breadcrumb.Item linkAs={Link} linkProps={{ to: '/' }}>\n          {t('tenancy_item_breadcrumb_back_to_list')}\n        </Breadcrumb.Item>\n        <Breadcrumb.Item active>\n          {error && 'ERROR'}\n          {item && item.tekst}\n        </Breadcrumb.Item>\n      </MyCrumb>\n      {error && (\n        <Container>\n          <Row>\n            <Col>{error}</Col>\n          </Row>\n        </Container>\n      )}\n      {item && <TheItem item={item} />}\n    </>\n  )\n}\nexport default TenancyItem\n"],"sourceRoot":""}