{"version":3,"sources":["components/EditTenancy.tsx"],"names":["EditTenancy","hideModal","tenancy","t","useTranslation","dispatch","useContext","TenancyContext","useState","is_saving","setIsSaving","show","onHide","onSubmit","e","preventDefault","stopPropagation","metadata","elements","target","querySelectorAll","found","i","length","element","val","value","trim","name","updated_tenancy","updateTenancyInStorage","then","data","type","UPDATE_TENANCY","payload","catch","err","console","log","Header","closeButton","Title","tekst","Body","Group","controlId","Label","Control","defaultValue","size","step","placeholder","nbr_of_rooms","utilities","as","rows","tenant_information","Footer","variant","onClick","animation","role","className"],"mappings":"0MA8IeA,UA1HK,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,QACxBC,EAAMC,cAAND,EAEAE,EAAaC,qBAAWC,KAAxBF,SAHwD,EAM/BG,oBAAS,GANsB,mBAMzDC,EANyD,KAM9CC,EAN8C,KAmDhE,OACE,cAAC,IAAD,CAAOC,MAAM,EAAMC,OAAQX,EAA3B,SACE,eAAC,IAAD,CAAMY,SA3CW,SAACC,GACpBA,EAAEC,iBACFD,EAAEE,kBAOF,IALA,IAAMC,EAAyB,GACzBC,EAAYJ,EAAEK,OAA2BC,iBAAiB,mBAE5DC,GAAQ,EAEHC,EAAI,EAAGA,EAAIJ,EAASK,OAAQD,IAAK,CACxC,IAAME,EAAUN,EAASI,GACnBG,EAAMD,EAAQE,MAAMC,OACtBF,EAAIF,SACNN,EAASO,EAAQI,MAAQH,EACzBJ,GAAQ,GAIZ,IAAMQ,EAAwB,2BAAQ3B,GAAR,IAAiBe,aAC1CI,UACIQ,EAAgBZ,SAEzBP,GAAY,GAEZoB,YAAuBD,GACpBE,MAAK,SAACC,GACL3B,EAAS,CACP4B,KAAMC,IACNC,QAASH,IAEXtB,GAAY,GACZT,OAEDmC,OAAM,SAACC,GACN3B,GAAY,GACZ4B,QAAQC,IAAIF,MAGhBC,QAAQC,IAAIV,IAKV,UACE,cAAC,IAAMW,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAcxC,EAAQyC,UAExB,eAAC,IAAMC,KAAP,WACE,eAAC,IAAKC,MAAN,CAAYC,UAAU,gBAAtB,UACE,cAAC,IAAKC,MAAN,UAAa5C,EAAE,6BACf,cAAC,IAAK6C,QAAN,CACEC,aAAc/C,EAAQe,UAAYf,EAAQe,SAASiC,KACnDtB,KAAK,OACLK,KAAK,SACLkB,KAAK,MACLC,YAAajD,EAAE,4CAInB,eAAC,IAAK0C,MAAN,CAAYC,UAAU,sBAAtB,UACE,cAAC,IAAKC,MAAN,UAAa5C,EAAE,qCACf,cAAC,IAAK6C,QAAN,CACEC,aAAc/C,EAAQe,UAAYf,EAAQe,SAASoC,aACnDzB,KAAK,eACLK,KAAK,SACLkB,KAAK,IACLC,YAAajD,EAAE,oDAInB,eAAC,IAAK0C,MAAN,CAAYC,UAAU,qBAAtB,UACE,cAAC,IAAKC,MAAN,UAAa5C,EAAE,kCACf,cAAC,IAAK6C,QAAN,CACEpB,KAAK,YACLqB,aAAc/C,EAAQe,UAAYf,EAAQe,SAASqC,UACnDC,GAAG,WACHC,KAAM,EACNJ,YAAajD,EAAE,iDAInB,eAAC,IAAK0C,MAAN,CAAYC,UAAU,6BAAtB,UACE,cAAC,IAAKC,MAAN,UAAa5C,EAAE,2CACf,cAAC,IAAK6C,QAAN,CACEC,aAAc/C,EAAQe,UAAYf,EAAQe,SAASwC,mBACnD7B,KAAK,qBACL2B,GAAG,WACHC,KAAM,EACNJ,YAAajD,EAAE,6DAIrB,eAAC,IAAMuD,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAAS3D,EAArC,SACGE,EAAE,gCAEL,eAAC,IAAD,CAAQwD,QAAQ,UAAU1B,KAAK,SAA/B,UACGxB,GACC,qCACE,cAAC,IAAD,CAASoD,UAAU,SAASC,KAAK,SAASZ,KAAK,KAA/C,SACE,sBAAMa,UAAU,UAAhB,0BACS,IACV5D,EAAE,0CAGLM,GAAaN,EAAE","file":"static/js/5.2e4129a4.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Form from 'react-bootstrap/Form'\nimport { updateTenancyInStorage } from '../lib/backend'\nimport { Tenancy } from '../types/global'\nimport { UPDATE_TENANCY, TenancyContext } from '../contexts/TenancyContext'\n\nimport { useTranslation } from 'react-i18next'\n\ntype tplotOptions = {\n  [key: string]: string | number\n}\n\ntype EditTenancyProps = {\n  hideModal: () => void\n  tenancy: Tenancy\n}\n\nconst EditTenancy = ({ hideModal, tenancy }: EditTenancyProps) => {\n  const { t } = useTranslation()\n\n  const { dispatch } = useContext(TenancyContext)\n\n  // const [is_loading, setIsLoading] = useState(false)\n  const [is_saving, setIsSaving] = useState(false)\n\n  // const [picked_tenancy, setPickedTenancy] = useState<Tenancy>()\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault()\n    e.stopPropagation()\n\n    const metadata: tplotOptions = {}\n    const elements = (e.target as HTMLFormElement).querySelectorAll('input, textarea')\n\n    let found = false\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i] as HTMLInputElement\n      const val = element.value.trim()\n      if (val.length) {\n        metadata[element.name] = val\n        found = true\n      }\n    }\n\n    const updated_tenancy: Tenancy = { ...tenancy, metadata }\n    if (!found) {\n      delete updated_tenancy.metadata\n    }\n    setIsSaving(true)\n\n    updateTenancyInStorage(updated_tenancy)\n      .then((data) => {\n        dispatch({\n          type: UPDATE_TENANCY,\n          payload: data,\n        })\n        setIsSaving(false)\n        hideModal()\n      })\n      .catch((err) => {\n        setIsSaving(false)\n        console.log(err)\n      })\n\n    console.log(updated_tenancy)\n  }\n\n  return (\n    <Modal show={true} onHide={hideModal}>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title>{tenancy.tekst}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"formBasicSize\">\n            <Form.Label>{t('edit_tenancy_label_size')}</Form.Label>\n            <Form.Control\n              defaultValue={tenancy.metadata && tenancy.metadata.size}\n              name=\"size\"\n              type=\"number\"\n              step=\"0.1\"\n              placeholder={t('edit_tenancy_label_size_placeholder')}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicNbrOfRooms\">\n            <Form.Label>{t('edit_tenancy_label_nbr_of_rooms')}</Form.Label>\n            <Form.Control\n              defaultValue={tenancy.metadata && tenancy.metadata.nbr_of_rooms}\n              name=\"nbr_of_rooms\"\n              type=\"number\"\n              step=\"1\"\n              placeholder={t('edit_tenancy_label_nbr_of_rooms_placeholder')}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicUtilities\">\n            <Form.Label>{t('edit_tenancy_label_utilities')}</Form.Label>\n            <Form.Control\n              name=\"utilities\"\n              defaultValue={tenancy.metadata && tenancy.metadata.utilities}\n              as=\"textarea\"\n              rows={3}\n              placeholder={t('edit_tenancy_label_utilities_placeholder')}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicTenantInformation\">\n            <Form.Label>{t('edit_tenancy_label_tenant_information')}</Form.Label>\n            <Form.Control\n              defaultValue={tenancy.metadata && tenancy.metadata.tenant_information}\n              name=\"tenant_information\"\n              as=\"textarea\"\n              rows={3}\n              placeholder={t('edit_tenancy_label_tenant_information_placeholder')}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={hideModal}>\n            {t('edit_tenancy_cancel_button')}\n          </Button>\n          <Button variant=\"primary\" type=\"submit\">\n            {is_saving && (\n              <>\n                <Spinner animation=\"border\" role=\"status\" size=\"sm\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>{' '}\n                {t('edit_tenancy_save_button_is_saving')}\n              </>\n            )}\n            {!is_saving && t('edit_tenancy_save_button')}\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  )\n}\nexport default EditTenancy\n"],"sourceRoot":""}