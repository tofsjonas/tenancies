{"version":3,"sources":["components/login/FirebaseLogin.tsx","components/login/Login.tsx","components/portfolio/Search.tsx","components/portfolio/Portfolio.tsx","components/MyRoutes.tsx","lib/auth.ts","i18n/config.ts","components/LanguageToggler.tsx","components/MyNavbar.tsx","App.tsx","reportWebVitals.ts","index.tsx","lib/firebase/firebase.config.ts","contexts/AuthContext.tsx","components/MySpinner.tsx","contexts/TenancyContext.tsx","lib/firebase/firebase_storage.ts"],"names":["uiConfig","signInFlow","signInOptions","firebaseuiAuth","AnonymousAuthProvider","PROVIDER_ID","firebaseApp","auth","EmailAuthProvider","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","FirebaseLogin","useState","is_logged_in","setIsLoggedIn","unregisterAuthObserver","React","useRef","useEffect","current","onAuthStateChanged","user","className","firebaseAuth","onClick","signOut","Login","Pelle","styled","div","Search","tenancies","t","useTranslation","navigate","useNavigate","selected","id","labelKey","minLength","onChange","pick","options","placeholder","renderMenuItemChildren","option","tekst","AddTenancy","lazy","TenancyItem","TenancyList","FabButton","Button","Portfolio","useContext","AuthContext","TenancyContext","dispatch","loading","setLoading","show_add_modal","setShowAddModal","warning","useAlert","is_mounted","getTenanciesFromStorage","then","data","type","SET_TENANCIES","payload","catch","err","message","console","log","Navbar","bg","expand","Brand","MySpinner","title","length","Container","Row","Col","fallback","path","element","hideModal","MyRoutes","is_loading","Spinner","animation","uid","a","supported_i18n_languages","initial_language","localStorage","getItem","indexOf","i18n","use","initReactI18next","init","fallbackLng","lng","resources","en","translations","require","sv","ns","defaultNS","languages","LanguageToggler","changeLanguage","e","value","target","setItem","map","lang","variant","language","MyNavbar","success","Toggle","Collapse","NavDropdown","name","Item","href","preventDefault","alert","App","timeouts","danger","fluid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useDeviceLanguage","db","analytics","SET_USER","LOGOUT_USER","initialState","undefined","is_anonymous","reducer","state","action","createContext","AuthProvider","children","useReducer","firebase_user","isAnonymous","displayName","Provider","role","ADD_TENANCY","UPDATE_TENANCY","DELETE_TENANCY","tenancy","filter","obj","TenancyProvider","updateTenancyInStorage","new_obj","updated","FieldValue","serverTimestamp","collection","doc","update","deleteTenancyFromStorage","delete","result","docRef","where","get","docs","forEach","item","db_id","push","addTenancyToStorage","temp","owner","created","location","GeoPoint","x","y","add","res"],"mappings":"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","file":"static/js/main.8c6f1399.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { firebaseApp } from 'lib/firebase/firebase.config'\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\nimport { auth as firebaseuiAuth } from 'firebaseui'\n\n// Styles\nimport './login.css' // This uses CSS modules.\nimport './firebaseui-styling.global.css' // Import globally.\n\nconst uiConfig = {\n  signInFlow: 'popup',\n  signInOptions: [\n    // Leave the lines as is for the providers you want to offer your users.\n    firebaseuiAuth.AnonymousAuthProvider.PROVIDER_ID,\n    firebaseApp.auth.EmailAuthProvider.PROVIDER_ID,\n    // firebaseApp.auth.PhoneAuthProvider.PROVIDER_ID,\n    firebaseApp.auth.GoogleAuthProvider.PROVIDER_ID,\n    // firebaseApp.auth.FacebookAuthProvider.PROVIDER_ID,\n    // firebaseApp.auth.TwitterAuthProvider.PROVIDER_ID,\n    // firebaseApp.auth.GithubAuthProvider.PROVIDER_ID,\n    // firebaseApp.auth.AnonymousAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false,\n  },\n}\n\ntype func = () => void\n\nconst FirebaseLogin = () => {\n  const [is_logged_in, setIsLoggedIn] = useState(false)\n\n  const unregisterAuthObserver = React.useRef<func>(() => {})\n\n  useEffect(() => {\n    unregisterAuthObserver.current = firebaseApp.auth().onAuthStateChanged((user) => {\n      setIsLoggedIn(!!user)\n    })\n    return () => {\n      unregisterAuthObserver.current()\n    }\n  }, [])\n\n  return (\n    <div className=\"fb-container\">\n      {!is_logged_in && (\n        <div>\n          <StyledFirebaseAuth\n            className=\"fb-firebaseUi\"\n            uiConfig={uiConfig}\n            firebaseAuth={firebaseApp.auth()}\n            //\n          />\n        </div>\n      )}\n      {is_logged_in && (\n        <div className=\"fb-signedIn\">\n          {/* Hello {firebaseApp.auth().currentUser ? firebaseApp.auth().currentUser.displayName : ''}.  */}\n          You are now signed In!\n          <a className=\"fb-button\" onClick={() => firebaseApp.auth().signOut()}>\n            Sign-out\n          </a>\n        </div>\n      )}\n    </div>\n  )\n}\nexport default FirebaseLogin\n","import React from 'react' // useContext\n// import Button from 'react-bootstrap/Button'\n// import { signInAnonymously, signOut } from 'lib/auth'\n// import { useAlert } from 'react-bootstrap-hooks-alert'\n// import { useLocation, useNavigate } from 'react-router-dom'\n\n// import { AuthContext, SET_IS_LOADING } from 'contexts/AuthContext'\n// import LoginWithEmail from './LoginWithEmail'\nimport FirebaseLogin from './FirebaseLogin'\n\nconst Login = () => {\n  // const { user, dispatch } = useContext(AuthContext)\n  // const { success } = useAlert()\n  // const location = useLocation()\n  // const navigate = useNavigate()\n  // return location.pathname;\n\n  // console.log(location.pathname)\n\n  // const handleSignInAnonymously = () => {\n  //   dispatch({\n  //     type: SET_IS_LOADING,\n  //     payload: true,\n  //   })\n\n  //   signInAnonymously()\n  //     .then(() => {\n  //       if (location.pathname === '/login') {\n  //         navigate('/')\n  //       }\n  //     })\n  //     .catch(alert)\n  // }\n  // const handleLogout = () => {\n  //   signOut()\n  //     .then(() => {\n  //       success('you have been logged out')\n  //     })\n  //     .catch(alert)\n  // }\n\n  return (\n    <div className=\"login\">\n      <h1 className=\"text-center\">Login</h1>\n      <FirebaseLogin />\n    </div>\n  )\n}\nexport default Login\n","import React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Typeahead } from 'react-bootstrap-typeahead'\nimport { Tenancy } from '../../types/global'\nimport { useNavigate } from 'react-router-dom'\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\nimport styled from '@emotion/styled'\n\n/**\n * @todo react-highlight-words ?\n * in the typeahead examples this happens automatically...\n */\n\nconst Pelle = styled.div`\n  #async-tenancy-search {\n    min-width: 20rem;\n  }\n`\n\ntype SearchProps = {\n  tenancies: Tenancy[]\n}\n\nconst Search = ({ tenancies }: SearchProps) => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n\n  // eslint-disable-next-line\n  const [selected, setSelected] = useState<Tenancy[]>([]) // setSelected never used..\n\n  const handleTenancyPick = (pick: Tenancy[]) => {\n    if (pick[0]) {\n      navigate(`/tenancy/${pick[0].id}`)\n    }\n  }\n\n  return (\n    <Pelle>\n      <Typeahead\n        id=\"async-tenancy-search\"\n        labelKey=\"tekst\"\n        minLength={1}\n        selected={selected}\n        onChange={handleTenancyPick}\n        options={tenancies}\n        placeholder={t('overview_navbar_placeholder_search')}\n        renderMenuItemChildren={(option: Tenancy) => <span>{option.tekst}</span>}\n      />\n    </Pelle>\n  )\n}\nexport default Search\n","import React, { useState, useEffect, lazy, Suspense, useRef, useContext } from 'react'\nimport styled from '@emotion/styled'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\nimport { PlusLg } from 'react-bootstrap-icons'\nimport { useAlert } from 'react-bootstrap-hooks-alert'\n\nimport { useTranslation } from 'react-i18next'\nimport { getTenanciesFromStorage } from '../../lib/storage'\nimport { TenancyContext, SET_TENANCIES } from '../../contexts/TenancyContext'\nimport { Routes, Route } from 'react-router-dom'\nimport Search from './Search'\nimport MySpinner from '../MySpinner'\nimport { AuthContext } from 'contexts/AuthContext'\n\nconst AddTenancy = lazy(() => import('./AddTenancy'))\nconst TenancyItem = lazy(() => import('./TenancyItem'))\nconst TenancyList = lazy(() => import('./TenancyList'))\n\nconst FabButton = styled(Button)`\n  width: 50px;\n  height: 50px;\n  border-radius: 50px;\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n`\n\nconst Portfolio = () => {\n  const { user } = useContext(AuthContext)\n\n  const { t } = useTranslation()\n  const { tenancies, dispatch } = useContext(TenancyContext)\n  const [loading, setLoading] = useState(true)\n  const [show_add_modal, setShowAddModal] = useState(false)\n\n  const { warning } = useAlert()\n\n  const is_mounted = useRef(false)\n\n  useEffect(() => {\n    is_mounted.current = true\n    getTenanciesFromStorage(user)\n      .then((data) => {\n        if (is_mounted.current) {\n          dispatch({\n            type: SET_TENANCIES,\n            payload: data,\n          })\n          setLoading(false)\n        }\n      })\n      .catch((err) => {\n        setLoading(false)\n        warning(err.message)\n        console.log(err)\n      })\n\n    return () => {\n      is_mounted.current = false\n    }\n  }, [dispatch, warning, user])\n\n  const handleCloseAddModal = () => {\n    setShowAddModal(false)\n  }\n\n  const handleAddClick = () => {\n    setShowAddModal(true)\n  }\n\n  return (\n    <>\n      <Navbar bg=\"primary\" expand=\"lg\">\n        <Navbar.Brand className=\"mr-auto\">{t('overview_navbar_brand')}</Navbar.Brand>\n        <Search tenancies={tenancies} />\n      </Navbar>\n      {loading && <MySpinner title=\"...fetching tenancies...\" />}\n      {!loading && tenancies && tenancies.length === 0 && (\n        <Container>\n          <Row>\n            <Col>{t('overview_you_have_no_tenancies')}</Col>\n          </Row>\n        </Container>\n      )}\n      {!loading && tenancies && tenancies.length > 0 && (\n        <Suspense fallback={<MySpinner title=\"...loading page...\" />}>\n          <Routes>\n            <Route path=\"tenancy/:id\" element={<TenancyItem />} />\n            <Route path=\"*\" element={<TenancyList tenancies={tenancies} />} />\n          </Routes>\n        </Suspense>\n      )}\n      <FabButton onClick={handleAddClick}>\n        <PlusLg />\n      </FabButton>\n      <Suspense fallback={<MySpinner title=\"...loading modal...\" />}>\n        {show_add_modal && <AddTenancy hideModal={handleCloseAddModal} />}\n      </Suspense>\n    </>\n  )\n}\nexport default Portfolio\n","import React, { useContext } from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport Login from './login/Login'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { AuthContext } from '../contexts/AuthContext'\nimport Portfolio from './portfolio/Portfolio'\n\nconst MyRoutes = () => {\n  const { user, is_loading } = useContext(AuthContext)\n\n  return (\n    <>\n      {/* {user && user.uid} */}\n      {is_loading && (\n        <>\n          <Spinner animation=\"border\" /> ...authenticating...\n        </>\n      )}\n      {!is_loading && (\n        <Routes>\n          {user && user.uid && (\n            <>\n              {/* {(!user.uid || user.is_anonymous) && <Route path=\"login\" element={<Login />} />} */}\n              <Route path=\"login\" element={<Login />} />\n              <Route path=\"*\" element={<Portfolio />} />\n            </>\n          )}\n          {(!user || !user.uid) && (\n            <>\n              <Route path=\"*\" element={<Login />} />\n            </>\n          )}\n        </Routes>\n      )}\n    </>\n  )\n}\nexport default MyRoutes\n","import { firebaseApp } from './firebase/firebase.config'\n\nexport const signOut = async () => {\n  firebaseApp.auth().signOut()\n}\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nexport const supported_i18n_languages = ['en', 'sv']\n\nlet initial_language = localStorage.getItem('language') || 'en'\n\nif (supported_i18n_languages.indexOf(initial_language) === -1) {\n  initial_language = 'en'\n}\n\ni18n.use(initReactI18next).init({\n  fallbackLng: 'en',\n  lng: initial_language,\n  resources: {\n    en: {\n      translations: require('./locales/en/translations.json'),\n    },\n    sv: {\n      translations: require('./locales/sv/translations.json'),\n    },\n  },\n  ns: ['translations'],\n  defaultNS: 'translations',\n})\n\ni18n.languages = ['en', 'sv']\n\nexport default i18n\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport Button from 'react-bootstrap/Button'\nimport { supported_i18n_languages } from '../i18n/config'\n\nconst LanguageToggler = () => {\n  const { i18n } = useTranslation()\n\n  const changeLanguage = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const value = (e.target as HTMLInputElement).value\n    localStorage.setItem('language', value)\n    // console.log(i18n.languages) changes between clicks, no idea why...\n    i18n.changeLanguage(value)\n  }\n\n  return (\n    <div className=\"LanguageToggler\">\n      {supported_i18n_languages.map((lang) => (\n        <Button variant={lang === i18n.language ? 'dark' : 'light'} key={lang} onClick={changeLanguage} value={lang}>\n          {lang}\n        </Button>\n      ))}\n    </div>\n  )\n}\nexport default LanguageToggler\n","import React, { useContext } from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\nimport NavDropdown from 'react-bootstrap/NavDropdown'\nimport { useAlert } from 'react-bootstrap-hooks-alert'\nimport { signOut } from 'lib/auth'\n\nimport LanguageToggler from './LanguageToggler'\nimport { AuthContext } from '../contexts/AuthContext'\n\nconst MyNavbar = () => {\n  const { user } = useContext(AuthContext)\n  const { success } = useAlert()\n\n  const handleLogout = (e: React.MouseEvent) => {\n    e.preventDefault()\n    signOut()\n      .then(() => {\n        success('You have been successfully logged out')\n      })\n      .catch(alert)\n  }\n\n  return (\n    <Navbar expand=\"sm\" className=\"container\">\n      <Navbar.Brand className=\"mr-auto\">Tenancy Stuff</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">\n        {user && user.uid && (\n          <>\n            {/* <Navbar.Text className=\"mr-2\">User:</Navbar.Text> */}\n            <NavDropdown title={user.name} id=\"collapsible-nav-dropdown\">\n              {/* <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <hr /> */}\n              {/* {user.is_anonymous && (\n                <NavDropdown.Item as={Link} to=\"login\">\n                  Login\n                </NavDropdown.Item>\n              )} */}\n              <NavDropdown.Item href=\"#\" onClick={handleLogout}>\n                Logout\n              </NavDropdown.Item>\n            </NavDropdown>\n          </>\n        )}\n\n        <LanguageToggler />\n      </Navbar.Collapse>\n    </Navbar>\n  )\n}\nexport default MyNavbar\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport TenancyProvider from './contexts/TenancyContext'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { AlertProvider, AlertOutlet } from 'react-bootstrap-hooks-alert'\nimport 'react-bootstrap-hooks-alert/dist/Alert.css'\nimport MyRoutes from './components/MyRoutes'\nimport AuthProvider from './contexts/AuthContext'\nimport MyNavbar from './components/MyNavbar'\n\nfunction App() {\n  return (\n    <Router>\n      <AlertProvider\n        timeouts={{ warning: 5000, danger: 10000, success: 2000 }}\n        // timeouts={{ success: 1000 }}\n      >\n        <AuthProvider>\n          <TenancyProvider>\n            <Container fluid className=\"bg-light\">\n              <Row>\n                <Col>\n                  <MyNavbar />\n                </Col>\n              </Row>\n            </Container>\n            <Container>\n              <Row>\n                <Col>\n                  <AlertOutlet className=\"alert-outlet\" />\n                  <MyRoutes />\n                </Col>\n              </Row>\n            </Container>\n          </TenancyProvider>\n        </AuthProvider>\n      </AlertProvider>\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './i18n/config'\n\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","// import firebase from 'firebase'\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/analytics'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDS1Th9ZSpB5S1eiPe4FT046Wc1PljDhYo',\n  authDomain: 'tenancies.firebaseapp.com',\n  projectId: 'tenancies',\n  storageBucket: 'tenancies.appspot.com',\n  messagingSenderId: '447792445823',\n  appId: '1:447792445823:web:2fa88d20bee035c3cc024a',\n  measurementId: 'G-L2EL2TGPQD',\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nexport { firebase as firebaseApp }\n\nexport const firestore = firebase.firestore\nexport const auth = firebase.auth()\nauth.useDeviceLanguage()\nconst db = firestore()\nfirebase.analytics()\n\nexport default db\n","import MySpinner from 'components/MySpinner'\nimport React, { createContext, useReducer } from 'react'\nimport { firebaseApp } from '../lib/firebase/firebase.config'\n\nexport const SET_USER = 'SET_USER'\nexport const LOGOUT_USER = 'LOGOUT_USER'\nexport const SET_IS_LOADING = 'SET_IS_LOADING'\n\nexport type User = {\n  uid?: string\n  name?: string\n  is_anonymous?: boolean\n}\n\ntype State = {\n  user: User\n  is_loading?: boolean\n}\n\ntype Action =\n  | { type: 'SET_USER'; payload: User }\n  | { type: 'SET_IS_LOADING'; payload: boolean }\n  | { type: 'LOGOUT_USER' }\n\nconst initialState: State = {\n  user: {\n    uid: undefined,\n    name: 'Guest',\n    is_anonymous: false,\n  },\n  is_loading: true,\n}\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case SET_USER:\n      return { ...state, user: action.payload, is_loading: false }\n    case SET_IS_LOADING:\n      return { ...state, is_loading: action.payload }\n    case LOGOUT_USER:\n      return { ...initialState, is_loading: false }\n    default:\n      return state\n  }\n}\n\nexport type ContextType = State & {\n  dispatch: React.Dispatch<Action>\n}\n\nexport const AuthContext = createContext<ContextType>({\n  ...initialState,\n  dispatch: () => null,\n})\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  React.useEffect(() => {\n    // console.log(dispatch)\n    // dispatch({\n    //   type: SET_IS_LOADING,\n    //   payload: true,\n    // })\n\n    firebaseApp.auth().onAuthStateChanged((firebase_user) => {\n      if (firebase_user) {\n        const user = {\n          uid: firebase_user.uid,\n          is_anonymous: firebase_user.isAnonymous,\n          name: firebase_user.displayName || 'Guest',\n        }\n        dispatch({\n          type: SET_USER,\n          payload: user,\n        })\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        // const uid = firebase_user.uid\n        // console.log('uid:', uid, 'isAnonymous:', firebase_user.isAnonymous)\n        // ...\n      } else {\n        dispatch({\n          type: LOGOUT_USER,\n        })\n      }\n    })\n  }, [dispatch])\n\n  return (\n    <AuthContext.Provider value={{ ...state, dispatch }}>\n      {state.is_loading && <MySpinner title=\"...authenticating...\" />}\n      {!state.is_loading && children}\n    </AuthContext.Provider>\n  )\n}\nexport default AuthProvider\n","import React from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\n\ntype MySpinnerProps = {\n  title?: string\n}\n\nconst MySpinner = ({ title }: MySpinnerProps) => {\n  return (\n    <>\n      <Spinner animation=\"border\" role=\"status\" /> {title}\n    </>\n  )\n}\nexport default MySpinner\n","import React, { createContext, useReducer } from 'react'\nimport { Tenancy } from '../types/global'\n\nexport const SET_TENANCIES = 'SET_TENANCIES'\nexport const ADD_TENANCY = 'ADD_TENANCY'\nexport const UPDATE_TENANCY = 'UPDATE_TENANCY'\nexport const DELETE_TENANCY = 'DELETE_TENANCY'\n\ntype State = {\n  tenancies: Tenancy[]\n}\n\ntype Action =\n  | { type: 'SET_TENANCIES'; payload: Tenancy[] }\n  | { type: 'ADD_TENANCY'; payload: Tenancy }\n  | { type: 'UPDATE_TENANCY'; payload: Tenancy }\n  | { type: 'DELETE_TENANCY'; payload: string }\n\nconst initialState: State = {\n  tenancies: [],\n}\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case SET_TENANCIES:\n      return { ...state, tenancies: action.payload }\n    case ADD_TENANCY:\n      return { ...state, tenancies: [...state.tenancies, action.payload] }\n    case UPDATE_TENANCY:\n      return {\n        ...state,\n        tenancies: state.tenancies.map((tenancy) => {\n          if (tenancy.id === action.payload.id) {\n            return action.payload\n          } else {\n            return tenancy\n          }\n        }),\n      }\n    case DELETE_TENANCY:\n      return { ...state, tenancies: state.tenancies.filter((obj) => obj.id !== action.payload) }\n    default:\n      return state\n  }\n}\n\nexport type ContextType = State & {\n  dispatch: React.Dispatch<Action>\n}\n\nexport const TenancyContext = createContext<ContextType>({\n  ...initialState,\n  dispatch: () => null,\n})\n\nconst TenancyProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return <TenancyContext.Provider value={{ ...state, dispatch }}>{children}</TenancyContext.Provider>\n}\nexport default TenancyProvider\n","import { Tenancy, TenancyMetaData, DB_ID } from 'types/global'\nimport db, { firestore } from 'lib/firebase/firebase.config'\nimport { User } from 'contexts/AuthContext'\n\ntype updateTenancyInStorageParams = {\n  id: DB_ID\n  data: TenancyMetaData\n}\n\nexport const updateTenancyInStorage = async ({ id, data }: updateTenancyInStorageParams) => {\n  const new_obj = {\n    ...data,\n    updated: firestore.FieldValue.serverTimestamp(),\n  }\n  await db.collection('tenancies').doc(id).update(new_obj)\n  return new_obj\n}\n\nexport const deleteTenancyFromStorage = async (id: string, user: User) => {\n  console.log(user)\n  await db.collection('tenancies').doc(id).delete()\n}\n\nexport const getTenanciesFromStorage = async (user: User) => {\n  const result: Tenancy[] = []\n  const docRef = db.collection('tenancies').where('owner', '==', user.is_anonymous ? null : user.uid)\n  const data = await docRef.get()\n  data.docs.forEach((item) => {\n    const tenancy = {\n      ...item.data(),\n      db_id: item.id,\n    } as Tenancy\n\n    result.push(tenancy)\n  })\n  return result\n}\n\nexport const addTenancyToStorage = async (obj: Tenancy, user: User) => {\n  const temp = {\n    ...obj,\n    owner: user.is_anonymous ? null : user.uid,\n    created: firestore.FieldValue.serverTimestamp(),\n    updated: firestore.FieldValue.serverTimestamp(),\n    location: new firestore.GeoPoint(obj.x, obj.y),\n  }\n\n  const res = await db.collection('tenancies').add(temp)\n  temp.db_id = res.id\n  return temp\n}\n"],"sourceRoot":""}