{"version":3,"sources":["i18n/config.ts","components/LanguageToggler.tsx","components/portfolio/Search.tsx","components/portfolio/Portfolio.tsx","App.tsx","reportWebVitals.ts","index.tsx","contexts/TenancyContext.tsx","lib/backend.ts"],"names":["supported_i18n_languages","initial_language","localStorage","getItem","indexOf","i18n","use","initReactI18next","init","fallbackLng","lng","resources","en","translations","require","sv","ns","defaultNS","languages","LanguageToggler","useTranslation","changeLanguage","e","value","target","setItem","className","map","lang","Button","variant","language","onClick","Pelle","styled","div","Search","tenancies","t","navigate","useNavigate","useState","selected","id","labelKey","minLength","onChange","pick","adgangsadresse","options","placeholder","renderMenuItemChildren","option","tekst","AddTenancy","lazy","TenancyItem","TenancyList","FabButton","Portfolio","useContext","TenancyContext","dispatch","loading","setLoading","show_add_modal","setShowAddModal","is_mounted","useRef","useEffect","current","getTenanciesFromStorage","then","data","type","SET_TENANCIES","payload","catch","err","console","log","Spinner","animation","role","length","Container","Row","Col","fallback","Navbar","bg","expand","Brand","path","element","hideModal","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","ADD_TENANCY","UPDATE_TENANCY","DELETE_TENANCY","initialState","reducer","state","action","tenancy","filter","obj","createContext","TenancyProvider","children","useReducer","Provider","getAddressInfoFromDAWA","query","success","fail","axios","get","process","escape","response","status","a","Promise","resolve","reject","tenancies_as_json_string","parsed_json","JSON","parse","setTimeout","error","Error","addTenancyToStorage","created_date","Date","toISOString","push","stringify","updateTenancyInStorage","updated_date","deleteTenancyFromStorage","new_tenancies"],"mappings":"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","file":"static/js/main.56636a2a.chunk.js","sourcesContent":["import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nexport const supported_i18n_languages = ['en', 'sv']\n\nlet initial_language = localStorage.getItem('language') || 'en'\n\nif (supported_i18n_languages.indexOf(initial_language) === -1) {\n  initial_language = 'en'\n}\n\ni18n.use(initReactI18next).init({\n  fallbackLng: 'en',\n  lng: initial_language,\n  resources: {\n    en: {\n      translations: require('./locales/en/translations.json'),\n    },\n    sv: {\n      translations: require('./locales/sv/translations.json'),\n    },\n  },\n  ns: ['translations'],\n  defaultNS: 'translations',\n})\n\ni18n.languages = ['en', 'sv']\n\nexport default i18n\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport Button from 'react-bootstrap/Button'\nimport { supported_i18n_languages } from '../i18n/config'\n\nconst LanguageToggler = () => {\n  const { i18n } = useTranslation()\n\n  const changeLanguage = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const value = (e.target as HTMLInputElement).value\n    localStorage.setItem('language', value)\n    // console.log(i18n.languages) changes between clicks, no idea why...\n    i18n.changeLanguage(value)\n  }\n\n  return (\n    <div className=\"LanguageToggler\">\n      {supported_i18n_languages.map((lang) => (\n        <Button variant={lang === i18n.language ? 'dark' : 'light'} key={lang} onClick={changeLanguage} value={lang}>\n          {lang}\n        </Button>\n      ))}\n    </div>\n  )\n}\nexport default LanguageToggler\n","import React, { useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Typeahead } from 'react-bootstrap-typeahead'\nimport { Tenancy } from '../../types/global'\nimport { useNavigate } from 'react-router-dom'\nimport 'react-bootstrap-typeahead/css/Typeahead.css'\nimport styled from '@emotion/styled'\n\n/**\n * @todo react-highlight-words ?\n * in the typeahead examples this happens automatically...\n */\n\nconst Pelle = styled.div`\n  #async-tenancy-search {\n    min-width: 20rem;\n  }\n`\n\ntype SearchProps = {\n  tenancies: Tenancy[]\n}\n\nconst Search = ({ tenancies }: SearchProps) => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n\n  // eslint-disable-next-line\n  const [selected, setSelected] = useState<Tenancy[]>([]) // setSelected never used..\n\n  const handleTenancyPick = (pick: Tenancy[]) => {\n    if (pick[0]) {\n      navigate(`/tenancy/${pick[0].adgangsadresse.id}`)\n    }\n  }\n\n  return (\n    <Pelle>\n      <Typeahead\n        id=\"async-tenancy-search\"\n        labelKey=\"tekst\"\n        minLength={1}\n        selected={selected}\n        onChange={handleTenancyPick}\n        options={tenancies}\n        placeholder={t('overview_navbar_placeholder_search')}\n        renderMenuItemChildren={(option: Tenancy) => <span>{option.tekst}</span>}\n      />\n    </Pelle>\n  )\n}\nexport default Search\n","import React, { useState, useEffect, lazy, Suspense, useRef, useContext } from 'react'\nimport styled from '@emotion/styled'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport { PlusLg } from 'react-bootstrap-icons'\n\nimport { useTranslation } from 'react-i18next'\nimport { getTenanciesFromStorage } from '../../lib/backend'\nimport { TenancyContext, SET_TENANCIES } from '../../contexts/TenancyContext'\nimport { Routes, Route } from 'react-router-dom'\nimport LanguageToggler from '../LanguageToggler'\nimport Search from './Search'\n\nconst AddTenancy = lazy(() => import('./AddTenancy'))\nconst TenancyItem = lazy(() => import('./TenancyItem'))\nconst TenancyList = lazy(() => import('./TenancyList'))\n\nconst FabButton = styled(Button)`\n  width: 50px;\n  height: 50px;\n  border-radius: 50px;\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n`\n\nconst Portfolio = () => {\n  const { t } = useTranslation()\n  const { tenancies, dispatch } = useContext(TenancyContext)\n  const [loading, setLoading] = useState(true)\n  const [show_add_modal, setShowAddModal] = useState(false)\n\n  const is_mounted = useRef(false)\n\n  useEffect(() => {\n    is_mounted.current = true\n    getTenanciesFromStorage()\n      .then((data) => {\n        if (is_mounted.current) {\n          dispatch({\n            type: SET_TENANCIES,\n            payload: data,\n          })\n          setLoading(false)\n        }\n      })\n      .catch((err) => {\n        setLoading(false)\n        console.log(err)\n      })\n\n    return () => {\n      is_mounted.current = false\n    }\n  }, [dispatch])\n\n  const handleCloseAddModal = () => {\n    setShowAddModal(false)\n  }\n\n  const handleAddClick = () => {\n    setShowAddModal(true)\n  }\n\n  return (\n    <>\n      {loading && (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      )}\n      {!loading && tenancies && tenancies.length === 0 && (\n        <Container>\n          <Row>\n            <Col>{t('overview_you_have_no_tenancies')}</Col>\n          </Row>\n        </Container>\n      )}\n      {!loading && tenancies && tenancies.length > 0 && (\n        <Suspense fallback=\"\">\n          <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand className=\"mr-auto\">{t('overview_navbar_brand')}</Navbar.Brand>\n            <LanguageToggler />\n            <Search tenancies={tenancies} />\n          </Navbar>\n\n          <Routes>\n            <Route path=\"tenancy/:id\" element={<TenancyItem />} />\n            <Route path=\"*\" element={<TenancyList tenancies={tenancies} />} />\n          </Routes>\n        </Suspense>\n      )}\n      <FabButton onClick={handleAddClick}>\n        <PlusLg />\n      </FabButton>\n      <Suspense fallback=\"loading...\">{show_add_modal && <AddTenancy hideModal={handleCloseAddModal} />}</Suspense>\n    </>\n  )\n}\nexport default Portfolio\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport TenancyProvider from './contexts/TenancyContext'\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom'\nimport Portfolio from './components/portfolio/Portfolio'\n\nfunction App() {\n  return (\n    <Router>\n      <TenancyProvider>\n        <Container>\n          <Row>\n            <Col>\n              <Routes>\n                {/* <Route path=\"/tenancies/:id\" element={<Tenancy />} /> */}\n                <Route path=\"*\" element={<Portfolio />} />\n              </Routes>\n            </Col>\n          </Row>\n        </Container>\n      </TenancyProvider>\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './i18n/config'\n\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import React, { createContext, useReducer } from 'react'\nimport { Tenancy } from '../types/global'\n\nexport const SET_TENANCIES = 'SET_TENANCIES'\nexport const ADD_TENANCY = 'ADD_TENANCY'\nexport const UPDATE_TENANCY = 'UPDATE_TENANCY'\nexport const DELETE_TENANCY = 'DELETE_TENANCY'\n\ntype State = {\n  tenancies: Tenancy[]\n}\n\ntype Action =\n  | { type: 'SET_TENANCIES'; payload: Tenancy[] }\n  | { type: 'ADD_TENANCY'; payload: Tenancy }\n  | { type: 'UPDATE_TENANCY'; payload: Tenancy }\n  | { type: 'DELETE_TENANCY'; payload: string }\n\nconst initialState: State = {\n  tenancies: [],\n}\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case SET_TENANCIES:\n      return { ...state, tenancies: action.payload }\n    case ADD_TENANCY:\n      return { ...state, tenancies: [...state.tenancies, action.payload] }\n    case UPDATE_TENANCY:\n      return {\n        ...state,\n        tenancies: state.tenancies.map((tenancy) => {\n          if (tenancy.adgangsadresse.id === action.payload.adgangsadresse.id) {\n            return action.payload\n          } else {\n            return tenancy\n          }\n        }),\n      }\n    case DELETE_TENANCY:\n      return { ...state, tenancies: state.tenancies.filter((obj) => obj.adgangsadresse.id !== action.payload) }\n    default:\n      return state\n  }\n}\n\nexport type ContextType = State & {\n  dispatch: React.Dispatch<Action>\n}\n\nexport const TenancyContext = createContext<ContextType>({\n  ...initialState,\n  dispatch: () => null,\n})\n\nconst TenancyProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return <TenancyContext.Provider value={{ ...state, dispatch }}>{children}</TenancyContext.Provider>\n}\nexport default TenancyProvider\n","import axios from 'axios'\nimport { Tenancy } from '../types/global'\n\ntype AddressParams = {\n  query: string\n  success: (data: Tenancy[]) => void\n  fail: (err: Error) => void\n}\n\nexport const getAddressInfoFromDAWA = ({ query, success, fail }: AddressParams): void => {\n  const remote_url = process.env.REACT_APP_DAWA_URL\n  axios\n    .get(remote_url + escape(query))\n    .then((response) => {\n      if (response.status === 200) {\n        success(response.data)\n      }\n    })\n    .catch((err) => {\n      fail(err)\n    })\n}\n\nexport const getTenanciesFromStorage = async () => {\n  return new Promise<Tenancy[]>((resolve, reject) => {\n    const tenancies_as_json_string = localStorage.getItem('tenancies') || '[]'\n    try {\n      const parsed_json = JSON.parse(tenancies_as_json_string)\n      // to fake load time\n      setTimeout(() => {\n        resolve(parsed_json)\n      }, 200)\n    } catch (error) {\n      localStorage.setItem('tenancies', '')\n      reject(new Error('Data corrupt, resetting!'))\n    }\n  })\n}\n\n/**\n * @todo ensure unique addresses\n */\n\nexport const addTenancyToStorage = async (obj: Tenancy) => {\n  return new Promise<Tenancy>((resolve, reject) => {\n    const tenancies_as_json_string = localStorage.getItem('tenancies') || '[]'\n    try {\n      obj.created_date = new Date().toISOString()\n      const tenancies = JSON.parse(tenancies_as_json_string)\n      tenancies.push(obj)\n      localStorage.setItem('tenancies', JSON.stringify(tenancies))\n      // to fake load time\n      setTimeout(() => {\n        resolve(obj)\n      }, 600)\n    } catch (error) {\n      reject(error)\n    }\n  })\n}\n\nexport const updateTenancyInStorage = async (obj: Tenancy) => {\n  return new Promise<Tenancy>((resolve, reject) => {\n    const tenancies_as_json_string = localStorage.getItem('tenancies') || '[]'\n    try {\n      obj.updated_date = new Date().toISOString()\n      const tenancies = (JSON.parse(tenancies_as_json_string) as Tenancy[]).map((tenancy) => {\n        if (tenancy.adgangsadresse.id === obj.adgangsadresse.id) {\n          return obj\n        } else {\n          return tenancy\n        }\n      })\n\n      localStorage.setItem('tenancies', JSON.stringify(tenancies))\n      // to fake load time\n      setTimeout(() => {\n        resolve(obj)\n      }, 600)\n    } catch (error) {\n      reject(error)\n    }\n  })\n}\n\nexport const deleteTenancyFromStorage = async (id: string) => {\n  return new Promise<void>((resolve, reject) => {\n    const tenancies_as_json_string = localStorage.getItem('tenancies') || '[]'\n    try {\n      const tenancies = JSON.parse(tenancies_as_json_string)\n      const new_tenancies = tenancies.filter((obj: Tenancy) => obj.adgangsadresse.id !== id)\n      localStorage.setItem('tenancies', JSON.stringify(new_tenancies))\n      // to fake load time\n      setTimeout(() => {\n        resolve()\n      }, 200)\n    } catch (error) {\n      reject(error)\n    }\n  })\n}\n"],"sourceRoot":""}