{"version":3,"sources":["components/StreetView.tsx","components/TenancyList.tsx","i18n/config.ts","components/LanguageToggler.tsx","components/OverView.tsx","App.tsx","reportWebVitals.ts","index.tsx","contexts/TenancyContext.tsx","lib/backend.ts"],"names":["StreetView","hideModal","tenancy","url","adgangsadresse","y","x","process","Modal","show","onHide","Header","closeButton","Title","tekst","Body","className","Image","crossOrigin","width","height","src","rounded","Footer","Button","variant","onClick","EditTenancy","lazy","TenancyList","tenancies","items_per_page","parseInt","dispatch","useContext","TenancyContext","useState","items","setItems","page_count","setPageCount","current_page_index","setCurrentPageIndex","edit_tenancy","setEditTenancy","street_view_tenancy","setStreetViewTenancy","useEffect","start","end","slice","count","Math","ceil","length","map","Row","Col","md","metadata","id","window","confirm","deleteTenancyFromStorage","then","type","DELETE_TENANCY","payload","catch","err","console","log","Pagination","number","push","Item","active","getItems","fallback","supported_i18n_languages","initial_language","localStorage","getItem","indexOf","i18n","use","initReactI18next","init","fallbackLng","lng","resources","en","translations","require","sv","ns","defaultNS","languages","LanguageToggler","useTranslation","changeLanguage","e","value","target","setItem","lang","language","AddTenancy","FabButton","styled","OverView","t","loading","setLoading","filter","setFilter","filtered_list","setFilteredList","show_add_modal","setShowAddModal","is_mounted","useRef","current","getTenanciesFromStorage","data","SET_TENANCIES","list","obj","RegExp","test","Navbar","bg","expand","Brand","Form","inline","FormControl","placeholder","onChange","Container","Spinner","animation","role","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","ADD_TENANCY","UPDATE_TENANCY","initialState","reducer","state","action","createContext","TenancyProvider","children","useReducer","Provider","getAddressInfoFromDAWA","query","success","fail","axios","get","escape","response","status","a","Promise","resolve","reject","tenancies_as_json_string","parsed_json","JSON","parse","setTimeout","error","Error","addTenancyToStorage","created_date","Date","toISOString","stringify","updateTenancyInStorage","updated_date","new_tenancies"],"mappings":"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","file":"static/js/main.723a7439.chunk.js","sourcesContent":["import React from 'react'\nimport { Tenancy } from '../types/global'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Image from 'react-bootstrap/Image'\n\ntype StreetViewProps = {\n  hideModal: () => void\n  tenancy: Tenancy\n}\n\nconst StreetView = ({ hideModal, tenancy }: StreetViewProps) => {\n  const url = `https://maps.googleapis.com/maps/api/streetview?size=400x400&location=${tenancy.adgangsadresse.y},${tenancy.adgangsadresse.x}&fov=70&pitch=0&key=${process.env.REACT_APP_GOOGLE_API_KEY}`\n  return (\n    <Modal show={true} onHide={hideModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>{tenancy.tekst}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"text-center\">\n        <Image crossOrigin=\"anonymous\" width=\"400\" height=\"400\" src={url} rounded />\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={hideModal}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\nexport default StreetView\n","import React, { useContext, useState, useEffect, Suspense, lazy } from 'react'\nimport { Tenancy } from '../types/global'\nimport { deleteTenancyFromStorage } from '../lib/backend'\nimport { TenancyContext, DELETE_TENANCY } from '../contexts/TenancyContext'\nimport Pagination from 'react-bootstrap/Pagination'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport { Image, FileEarmarkPlus, FileEarmarkTextFill, XLg } from 'react-bootstrap-icons'\nimport StreetView from './StreetView'\n\nconst EditTenancy = lazy(() => import('./EditTenancy'))\n\ntype TenancyListProps = {\n  tenancies: Tenancy[]\n}\n\nconst TenancyList = ({ tenancies }: TenancyListProps) => {\n  const items_per_page = parseInt(process.env.REACT_APP_NUMBER_OF_ITEMS_IN_TENANCY_LIST || '10')\n  const { dispatch } = useContext(TenancyContext)\n  const [items, setItems] = useState<Tenancy[]>()\n  const [page_count, setPageCount] = useState(1)\n  const [current_page_index, setCurrentPageIndex] = useState(1)\n  const [edit_tenancy, setEditTenancy] = useState<Tenancy | null>(null)\n  const [street_view_tenancy, setStreetViewTenancy] = useState<Tenancy | null>(null)\n\n  const handleClick = (index: number) => {\n    setCurrentPageIndex(index)\n  }\n\n  useEffect(() => {\n    if (current_page_index > 1 && current_page_index > page_count) {\n      setCurrentPageIndex(current_page_index - 1)\n    }\n  }, [current_page_index, page_count])\n\n  useEffect(() => {\n    const start = (current_page_index - 1) * items_per_page\n    const end = current_page_index * items_per_page\n    setItems(tenancies.slice(start, end))\n  }, [current_page_index, tenancies, items_per_page])\n\n  useEffect(() => {\n    const count = Math.ceil(tenancies.length / items_per_page)\n    if (count > 0) {\n      setPageCount(count)\n    }\n  }, [tenancies, items_per_page])\n\n  /**\n   * @todo make it purdier than window.confirm\n   */\n  const handleDeleteClick = (id: string) => {\n    if (window.confirm('Are you sure?')) {\n      deleteTenancyFromStorage(id)\n        .then(() => {\n          dispatch({\n            type: DELETE_TENANCY,\n            payload: id,\n          })\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n  const handleCloseEditModal = () => {\n    setEditTenancy(null)\n  }\n  const handleCloseStreetViewModal = () => {\n    setStreetViewTenancy(null)\n  }\n\n  const getItems = () => {\n    const items = []\n    for (let number = 1; number <= page_count; number++) {\n      items.push(\n        <Pagination.Item\n          key={number}\n          active={number === current_page_index}\n          onClick={() => {\n            handleClick(number)\n          }}\n        >\n          {number}\n        </Pagination.Item>,\n      )\n    }\n    return items\n  }\n\n  return (\n    <>\n      {items && items.length > 0 && (\n        <>\n          {items.map((tenancy) => (\n            <Row className=\"mt-1 align-items-center\" key={tenancy.tekst}>\n              <Col>{tenancy.tekst}</Col>\n              <Col md=\"auto\">\n                <Button\n                  variant=\"primary\"\n                  onClick={() => {\n                    setStreetViewTenancy(tenancy)\n                  }}\n                >\n                  <Image />\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  onClick={() => {\n                    setEditTenancy(tenancy)\n                  }}\n                >\n                  {tenancy.metadata ? <FileEarmarkTextFill /> : <FileEarmarkPlus />}\n                </Button>\n                <Button\n                  variant=\"danger\"\n                  onClick={() => {\n                    handleDeleteClick(tenancy.adgangsadresse.id)\n                  }}\n                >\n                  <XLg />\n                </Button>\n              </Col>\n            </Row>\n          ))}\n          {page_count > 1 && (\n            <>\n              <br />\n              <Pagination>{getItems()}</Pagination>\n            </>\n          )}\n        </>\n      )}\n      {items && items.length === 0 && (\n        <Row className=\"mt-1 align-items-center\">\n          <Col>\n            <br />\n            Search result empty :(\n          </Col>\n        </Row>\n      )}\n\n      <Suspense fallback=\"loading...\">\n        {edit_tenancy && <EditTenancy tenancy={edit_tenancy} hideModal={handleCloseEditModal} />}\n        {street_view_tenancy && <StreetView tenancy={street_view_tenancy} hideModal={handleCloseStreetViewModal} />}\n      </Suspense>\n    </>\n  )\n}\nexport default TenancyList\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nexport const supported_i18n_languages = ['en', 'sv']\n\nlet initial_language = localStorage.getItem('language') || 'en'\n\nif (supported_i18n_languages.indexOf(initial_language) === -1) {\n  initial_language = 'en'\n}\n\ni18n.use(initReactI18next).init({\n  fallbackLng: 'en',\n  lng: initial_language,\n  resources: {\n    en: {\n      translations: require('./locales/en/translations.json'),\n    },\n    sv: {\n      translations: require('./locales/sv/translations.json'),\n    },\n  },\n  ns: ['translations'],\n  defaultNS: 'translations',\n})\n\ni18n.languages = ['en', 'sv']\n\nexport default i18n\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport Button from 'react-bootstrap/Button'\nimport { supported_i18n_languages } from '../i18n/config'\n\nconst LanguageToggler = () => {\n  const { i18n } = useTranslation()\n\n  const changeLanguage = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const value = (e.target as HTMLInputElement).value\n    localStorage.setItem('language', value)\n    // console.log(i18n.languages) changes between clicks, no idea why...\n    i18n.changeLanguage(value)\n  }\n\n  return (\n    <div className=\"LanguageToggler\">\n      {supported_i18n_languages.map((lang) => (\n        <Button variant={lang === i18n.language ? 'dark' : 'light'} key={lang} onClick={changeLanguage} value={lang}>\n          {lang}\n        </Button>\n      ))}\n    </div>\n  )\n}\nexport default LanguageToggler\n","import React, { useState, useEffect, lazy, Suspense, useRef, useContext } from 'react'\nimport { Tenancy } from '../types/global'\nimport styled from '@emotion/styled'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { useTranslation } from 'react-i18next'\n\nimport { PlusLg } from 'react-bootstrap-icons'\nimport { getTenanciesFromStorage } from '../lib/backend'\nimport { TenancyContext, SET_TENANCIES } from '../contexts/TenancyContext'\nimport TenancyList from './TenancyList'\nimport LanguageToggler from './LanguageToggler'\n\nconst AddTenancy = lazy(() => import('./AddTenancy'))\n\nconst FabButton = styled(Button)`\n  width: 50px;\n  height: 50px;\n  border-radius: 50px;\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n`\n\nconst OverView = () => {\n  const { t } = useTranslation()\n\n  const { tenancies, dispatch } = useContext(TenancyContext)\n  const [loading, setLoading] = useState(true)\n  const [filter, setFilter] = useState('')\n  const [filtered_list, setFilteredList] = useState<Tenancy[]>([])\n\n  const [show_add_modal, setShowAddModal] = useState(false)\n  const is_mounted = useRef(false)\n\n  useEffect(() => {\n    is_mounted.current = true\n    getTenanciesFromStorage()\n      .then((data) => {\n        if (is_mounted.current) {\n          dispatch({\n            type: SET_TENANCIES,\n            payload: data,\n          })\n          setLoading(false)\n        }\n      })\n      .catch((err) => {\n        setLoading(false)\n        console.log(err)\n      })\n\n    return () => {\n      is_mounted.current = false\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n    const list = tenancies.filter((obj) => new RegExp(filter, 'i').test(obj.tekst))\n    setFilteredList(list)\n  }, [tenancies, filter])\n\n  const handleCloseAddModal = () => {\n    setShowAddModal(false)\n  }\n\n  const handleAddClick = () => {\n    setShowAddModal(true)\n  }\n\n  const handleFilterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFilter(e.target.value)\n  }\n\n  return (\n    <>\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand className=\"mr-auto\">{t('overview_navbar_brand')}</Navbar.Brand>\n        <LanguageToggler />\n        <Form inline>\n          <FormControl\n            type=\"search\"\n            placeholder={t('overview_navbar_placeholder_search')}\n            value={filter}\n            onChange={handleFilterChange}\n            className=\"mr-sm-2\"\n          />\n        </Form>\n      </Navbar>\n      <Container>\n        {loading && (\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        )}\n        {!loading && tenancies && tenancies.length === 0 && (\n          <Row>\n            <Col>{t('overview_you_have_no_tenancies')}</Col>\n          </Row>\n        )}\n        {!loading && tenancies && tenancies.length > 0 && <TenancyList tenancies={filtered_list} />}\n      </Container>\n      <FabButton onClick={handleAddClick}>\n        <PlusLg />\n      </FabButton>\n      <Suspense fallback=\"loading...\">{show_add_modal && <AddTenancy hideModal={handleCloseAddModal} />}</Suspense>\n    </>\n  )\n}\nexport default OverView\n","import React from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport OverView from './components/OverView'\nimport TenancyProvider from './contexts/TenancyContext'\n\nfunction App() {\n  return (\n    <TenancyProvider>\n      <Container>\n        <Row>\n          <Col>\n            <OverView />\n          </Col>\n        </Row>\n      </Container>\n    </TenancyProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './i18n/config'\n\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import React, { createContext, useReducer } from 'react'\nimport { Tenancy } from '../types/global'\n\nexport const SET_TENANCIES = 'SET_TENANCIES'\nexport const ADD_TENANCY = 'ADD_TENANCY'\nexport const UPDATE_TENANCY = 'UPDATE_TENANCY'\nexport const DELETE_TENANCY = 'DELETE_TENANCY'\n\ntype State = {\n  tenancies: Tenancy[]\n}\n\ntype Action =\n  | { type: 'SET_TENANCIES'; payload: Tenancy[] }\n  | { type: 'ADD_TENANCY'; payload: Tenancy }\n  | { type: 'UPDATE_TENANCY'; payload: Tenancy }\n  | { type: 'DELETE_TENANCY'; payload: string }\n\nconst initialState: State = {\n  tenancies: [],\n}\n\nconst reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case SET_TENANCIES:\n      return { ...state, tenancies: action.payload }\n    case ADD_TENANCY:\n      return { ...state, tenancies: [...state.tenancies, action.payload] }\n    case UPDATE_TENANCY:\n      return {\n        ...state,\n        tenancies: state.tenancies.map((tenancy) => {\n          if (tenancy.adgangsadresse.id === action.payload.adgangsadresse.id) {\n            return action.payload\n          } else {\n            return tenancy\n          }\n        }),\n      }\n    case DELETE_TENANCY:\n      return { ...state, tenancies: state.tenancies.filter((obj) => obj.adgangsadresse.id !== action.payload) }\n    default:\n      return state\n  }\n}\n\nexport type ContextType = State & {\n  dispatch: React.Dispatch<Action>\n}\n\nexport const TenancyContext = createContext<ContextType>({\n  ...initialState,\n  dispatch: () => null,\n})\n\nconst TenancyProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return <TenancyContext.Provider value={{ ...state, dispatch }}>{children}</TenancyContext.Provider>\n}\nexport default TenancyProvider\n","import axios from 'axios'\nimport { Tenancy } from '../types/global'\n\ntype AddressParams = {\n  query: string\n  success: (data: Tenancy[]) => void\n  fail: (err: Error) => void\n}\n\nexport const getAddressInfoFromDAWA = ({ query, success, fail }: AddressParams): void => {\n  const remote_url = process.env.REACT_APP_DAWA_URL\n  axios\n    .get(remote_url + escape(query))\n    .then((response) => {\n      if (response.status === 200) {\n        success(response.data)\n      }\n    })\n    .catch((err) => {\n      fail(err)\n    })\n}\n\nexport const getTenanciesFromStorage = async () => {\n  return new Promise<Tenancy[]>((resolve, reject) => {\n    const tenancies_as_json_string = localStorage.getItem('tenancies') || '[]'\n    try {\n      const parsed_json = JSON.parse(tenancies_as_json_string)\n      // to fake load time\n      setTimeout(() => {\n        resolve(parsed_json)\n      }, 200)\n    } catch (error) {\n      localStorage.setItem('tenancies', '')\n      reject(new Error('Data corrupt, resetting!'))\n    }\n  })\n}\n\n/**\n * @todo ensure unique addresses\n */\n\nexport const addTenancyToStorage = async (obj: Tenancy) => {\n  return new Promise<Tenancy>((resolve, reject) => {\n    const tenancies_as_json_string = localStorage.getItem('tenancies') || '[]'\n    try {\n      obj.created_date = new Date().toISOString()\n      const tenancies = JSON.parse(tenancies_as_json_string)\n      tenancies.push(obj)\n      localStorage.setItem('tenancies', JSON.stringify(tenancies))\n      // to fake load time\n      setTimeout(() => {\n        resolve(obj)\n      }, 600)\n    } catch (error) {\n      reject(error)\n    }\n  })\n}\n\nexport const updateTenancyInStorage = async (obj: Tenancy) => {\n  return new Promise<Tenancy>((resolve, reject) => {\n    const tenancies_as_json_string = localStorage.getItem('tenancies') || '[]'\n    try {\n      obj.updated_date = new Date().toISOString()\n      const tenancies = (JSON.parse(tenancies_as_json_string) as Tenancy[]).map((tenancy) => {\n        if (tenancy.adgangsadresse.id === obj.adgangsadresse.id) {\n          return obj\n        } else {\n          return tenancy\n        }\n      })\n\n      localStorage.setItem('tenancies', JSON.stringify(tenancies))\n      // to fake load time\n      setTimeout(() => {\n        resolve(obj)\n      }, 600)\n    } catch (error) {\n      reject(error)\n    }\n  })\n}\n\nexport const deleteTenancyFromStorage = async (id: string) => {\n  return new Promise<void>((resolve, reject) => {\n    const tenancies_as_json_string = localStorage.getItem('tenancies') || '[]'\n    try {\n      const tenancies = JSON.parse(tenancies_as_json_string)\n      const new_tenancies = tenancies.filter((obj: Tenancy) => obj.adgangsadresse.id !== id)\n      localStorage.setItem('tenancies', JSON.stringify(new_tenancies))\n      // to fake load time\n      setTimeout(() => {\n        resolve()\n      }, 200)\n    } catch (error) {\n      reject(error)\n    }\n  })\n}\n"],"sourceRoot":""}