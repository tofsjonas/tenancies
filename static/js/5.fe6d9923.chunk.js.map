{"version":3,"sources":["components/portfolio/AddTenancy.tsx"],"names":["AddTenancy","hideModal","t","useTranslation","dispatch","useContext","TenancyContext","navigate","useNavigate","is_mounted","useRef","useState","is_loading","setIsLoading","is_saving","setIsSaving","picked_tenancy","setPickedTenancy","options","setOptions","useEffect","current","show","onHide","onSubmit","event","preventDefault","stopPropagation","new_tenancy","tekst","adgangsadresse","addTenancyToStorage","then","type","ADD_TENANCY","payload","id","catch","err","console","log","Header","closeButton","Title","Body","filterBy","isLoading","labelKey","minLength","onSearch","query","getAddressInfoFromDAWA","success","data","fail","onChange","pick","placeholder","renderMenuItemChildren","option","Footer","variant","onClick","disabled","animation","role","size","className"],"mappings":"4NAqIeA,UAnHI,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,UACZC,EAAMC,cAAND,EACAE,EAAaC,qBAAWC,KAAxBF,SACFG,EAAWC,cACXC,EAAaC,kBAAO,GAJ2B,EAKlBC,oBAAS,GALS,mBAK9CC,EAL8C,KAKlCC,EALkC,OAMpBF,oBAAS,GANW,mBAM9CG,EAN8C,KAMnCC,EANmC,OAOVJ,qBAPU,mBAO9CK,EAP8C,KAO9BC,EAP8B,OAQvBN,mBAAwB,IARD,mBAQ9CO,EAR8C,KAQrCC,EARqC,KAUrDC,qBAAU,WAER,OADAX,EAAWY,SAAU,EACd,WACLZ,EAAWY,SAAU,KAEtB,IAuDH,OACE,cAAC,IAAD,CAAOC,MAAM,EAAMC,OAAQtB,EAA3B,SACE,eAAC,IAAD,CAAMuB,SApCW,SAACC,GAGpB,GAFAA,EAAMC,iBACND,EAAME,kBACFX,EAAgB,CAClBD,GAAY,GAEZ,IAAMa,EAAW,aACfC,MAAOb,EAAea,OACnBb,EAAec,gBAGpBC,YAAoBH,GACjBI,MAAK,WACJ5B,EAAS,CACP6B,KAAMC,IACNC,QAASP,IAEPnB,EAAWY,UACbN,GAAY,GACZd,IACAM,EAAS,WAAD,OAAYqB,EAAYQ,SAGnCC,OAAM,SAACC,GACF7B,EAAWY,SACbN,GAAY,GAEdwB,QAAQC,IAAIF,QAShB,UACE,cAAC,IAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAAC,IAAMC,MAAP,UAAczC,EAAE,+BAElB,eAAC,IAAM0C,KAAP,WACG1C,EAAE,qCACH,cAAC,IAAD,CACE2C,SAXO,kBAAM,GAYbT,GAAG,kBACHU,UAAWlC,EACXmC,SAAS,QACTC,UAAW,EACXC,SAnEe,SAACC,GACxBrC,GAAa,GACbsC,YAAuB,CACrBD,QACAE,QAAS,SAACC,GACRlC,EAAWkC,GACXxC,GAAa,IAEfyC,KAAM,SAAChB,GACLzB,GAAa,GACb0B,QAAQC,IAAIF,OA0DRiB,SArDgB,SAACC,GACzBvC,EAAiBuC,EAAK,KAqDdtC,QAASA,EACTuC,YAAavD,EAAE,iCACfwD,uBAAwB,SAACC,GAAD,OAAyB,+BAAOA,EAAO9B,cAGnE,eAAC,IAAM+B,OAAP,WACE,cAAC,IAAD,CAAQC,QAAQ,YAAYC,QAAS7D,EAArC,SACGC,EAAE,+BAEL,eAAC,IAAD,CACE2D,QAAS7C,EAAiB,UAAY,YACtCiB,KAAK,SACL8B,UAAW/C,GAAkBF,EAH/B,UAKGA,GACC,qCACE,cAAC,IAAD,CAASkD,UAAU,SAASC,KAAK,SAASC,KAAK,KAA/C,SACE,sBAAMC,UAAU,UAAhB,0BACS,IACVjE,EAAE,yCAGLY,GAAaZ,EAAE","file":"static/js/5.fe6d9923.chunk.js","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Form from 'react-bootstrap/Form'\nimport { addTenancyToStorage, getAddressInfoFromDAWA } from '../../lib/backend'\nimport { DAWATenancy } from '../../types/global'\nimport { AsyncTypeahead } from 'react-bootstrap-typeahead'\nimport { ADD_TENANCY, TenancyContext } from '../../contexts/TenancyContext'\n\nimport { useTranslation } from 'react-i18next'\n\ntype AddTenancyProps = {\n  hideModal: () => void\n}\n\nconst AddTenancy = ({ hideModal }: AddTenancyProps) => {\n  const { t } = useTranslation()\n  const { dispatch } = useContext(TenancyContext)\n  const navigate = useNavigate()\n  const is_mounted = useRef(false)\n  const [is_loading, setIsLoading] = useState(false)\n  const [is_saving, setIsSaving] = useState(false)\n  const [picked_tenancy, setPickedTenancy] = useState<DAWATenancy>()\n  const [options, setOptions] = useState<DAWATenancy[]>([])\n\n  useEffect(() => {\n    is_mounted.current = true\n    return () => {\n      is_mounted.current = false\n    }\n  }, [])\n\n  const handleDAWASearch = (query: string) => {\n    setIsLoading(true)\n    getAddressInfoFromDAWA({\n      query,\n      success: (data) => {\n        setOptions(data)\n        setIsLoading(false)\n      },\n      fail: (err) => {\n        setIsLoading(false)\n        console.log(err)\n      },\n    })\n  }\n\n  const handleTenancyPick = (pick: DAWATenancy[]) => {\n    setPickedTenancy(pick[0])\n  }\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    event.stopPropagation()\n    if (picked_tenancy) {\n      setIsSaving(true)\n\n      const new_tenancy = {\n        tekst: picked_tenancy.tekst,\n        ...picked_tenancy.adgangsadresse,\n      }\n\n      addTenancyToStorage(new_tenancy)\n        .then(() => {\n          dispatch({\n            type: ADD_TENANCY,\n            payload: new_tenancy,\n          })\n          if (is_mounted.current) {\n            setIsSaving(false)\n            hideModal()\n            navigate(`tenancy/${new_tenancy.id}`)\n          }\n        })\n        .catch((err) => {\n          if (is_mounted.current) {\n            setIsSaving(false)\n          }\n          console.log(err)\n        })\n    }\n  }\n\n  const filterBy = () => true\n\n  return (\n    <Modal show={true} onHide={hideModal}>\n      <Form onSubmit={handleSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title>{t('add_tenancy_modal_title')}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {t('add_tenancy_start_typing_to_fetch')}\n          <AsyncTypeahead\n            filterBy={filterBy}\n            id=\"async-tenancies\"\n            isLoading={is_loading}\n            labelKey=\"tekst\"\n            minLength={3}\n            onSearch={handleDAWASearch}\n            onChange={handleTenancyPick}\n            options={options}\n            placeholder={t('add_tenancy_fetch_placeholder')}\n            renderMenuItemChildren={(option: DAWATenancy) => <span>{option.tekst}</span>}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={hideModal}>\n            {t('add_tenancy_cancel_button')}\n          </Button>\n          <Button\n            variant={picked_tenancy ? 'primary' : 'secondary'}\n            type=\"submit\"\n            disabled={!picked_tenancy || is_saving}\n          >\n            {is_saving && (\n              <>\n                <Spinner animation=\"border\" role=\"status\" size=\"sm\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>{' '}\n                {t('add_tenancy_save_button_is_saving')}\n              </>\n            )}\n            {!is_saving && t('add_tenancy_save_button')}\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  )\n}\nexport default AddTenancy\n"],"sourceRoot":""}